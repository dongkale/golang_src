{{template "include/base.html" .}}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

{{define "body"}}    
<div class="content">
    <form id="regForm" name="regForm" method="post">     
        <input type="hidden" id="old_name_val" value="">
        <input type="hidden" id="old_email_val" value="">
        <input type="hidden" id="old_phone_val" value="">
        
        <input type="hidden" id="refresh_flag" value="0">

        <input type="hidden" id="title_message_input_flag" value="0">

        <div>
            <h2 class="h2 pt1">지원자 초대하기</h2>            
            <a style="float:right;text-decoration: underline;padding-top:28px;color: royalblue;" href="/invite/send/list">지원자 초대 내역</a></li>
        </div>
        <div class="fieldList">   
            <dl class="tForm">  
                <h3 class="h3 pt2">채용 공고</h3>
                <br><br>
                <table>
                    <colgroup>
                        <col width="380px">
                        <col>
                    </colgroup>
                    <tr>                    
                        <td class="selectForm" id="recuit_select">
                            <select class="select wid100" name="recuit_select_cd" id="recuit_select_cd" required>
                                <option value="00" selected>전체</option>                                        
                                <option value="01">대기중</option>
                                <option value="02">채용중</option>
                                <option value="03">마감</option>
                            </select>
                            <span>
					        <select class="select wid580" name="recuit_select_list" id="recuit_select_list" required>
                                <option value="" disabled selected>채용 공고를 선택해 주세요</option>
                                {{range .RecruitList}}
                                    <option value="{{.SRecrutSn}}" data-up_job_grp="{{.SUpJobGrp}}" data-job_grp="{{.SJobGrp}}" data-recruit_title="{{.SRecrutTitle}}">[{{.SUpJobGrp}}>{{.SJobGrp}}] {{.SRecrutTitle}}</option>
                                {{end}}
					        </select>
                            </span>
                            <p class="validationAlert recuit_select_list_message"></p>                            
                        </td>                                
                    </tr>
                </table>                          
            </dl>            
            <div class="tForm">
                <h3 class="h3 pt2">받는 사람</h3>                
                <dl>                            
                    <dd>• 한번에 최대 100명까지 전송 가능합니다.</dd>
                    <dd>• 입력한 정보는 초대 메시지 발송일로부터 30일 후 또는 수신자 요청 즉시 삭제됩니다.</dd>
                    <dd>• 이메일 주소 혹은 휴대폰번호 중 최소1개의 정보를입력해주세요.</dd>
                </dl>                        
                <table>   
                    <br>
                    <div class="filebox"> 
                        <input class="upload-name" value="파일선택" disabled="disabled"> 
                        <label for="ex_filename" class="btn btnExcel"><span></span>업로드</label> 
                        <input type="file" id="ex_filename" class="upload-hidden"> 
                        <!--<a href="../../data/user_format.xlsx" id="down_excel" class="btn btnExcel" download><span></span>템플릿 받기</a></p>-->
                        <a href="/static/download/invite/user_format.xlsx" id="down_excel" class="btn btnExcel" download><span></span>템플릿 받기</a></p>
                    </div>                   
                    <br>
                    <tr>
                        <td>
                            <div class="jui" id="invite_area" style="display:1;width: 641px;">
                                <div class="input-group">
                                    <input type="text" name="name_add_value" id="name_add_value" class="it form-control" maxlength="50"
                                        class="it" placeholder="이름" aria-label="name_add_value"
                                        aria-describedby="basic-addon1" style="margin-left:0px; width:8%; height: 28px;"> 
                                    <input type="text" name="email_add_value"  id="email_add_value" class="it form-control" maxlength="50"
                                        class="it" placeholder="메일 주소" aria-label="email_add_value"
                                        aria-describedby="basic-addon1" style="margin-left:0px; width:18%; height: 28px;">
                                    <input type="text" name="phone_add_value" id="phone_add_value" class="it form-control" maxlength="50"
                                        class="it" placeholder="휴대폰 번호('-' 포함)" aria-label="phone_add_value"
                                        aria-describedby="basic-addon1" style="margin-left:0px; width:12%; height: 28px;">                                            
                                    <div class="form-control">
                                        <a href="javascript:void(0);" id="add_invite" class="form-control" style="width: 100%">
                                            <span class="btn normal" style="width: 70%;font-size:13px;">추가</span>
                                        </a>
                                    </div>                                            
                                </div>
                                <table id="table_invite" class="table classic" style="border: 1px;width: 695px">
                                    <thead>
                                    <tr style="display: 1">
                                        <th style="text-align:center;padding:0px;line-height:30px;font-size:12px;width:6%;border-radius:1px;border:1px solid #262627">선택</th>
                                        <th style="text-align:center;padding:0px;line-height:30px;font-size:12px;width:7%;border:1px solid #262627">번호</th>
                                        <th style="text-align:center;padding:0px;line-height:30px;font-size:12px;width:15%;border:1px solid #262627">이름</th>
                                        <th style="text-align:center;padding:0px;line-height:30px;font-size:12px;width:38%;border:1px solid #262627">이메일 주소</th>
                                        <th style="text-align:center;padding:0px;line-height:30px;font-size:12px;width:20%;border:1px solid #262627">휴대폰 번호</th>                                                
                                        <th style="text-align:center;padding:0px;line-height:30px;font-size:12px;width:14%;border-radius:1px;border:1px solid #262627;">수정/삭제</th>									
                                    </tr>
                                    </thead>
                                    <tbody></tbody>
                                    <tfoot>
                                    <tr>
                                        <td colspan="4"> 									
                                            <a href="javascript:void(0);" class="btn mini" style="width: 30px;font-size: 12px;" id="invite_select_all">전체선택</a>
                                            <a href="javascript:void(0);" class="btn mini" style="width: 30px;font-size: 12px;" id="invite_select_delete">선택삭제</a>									
                                        </td>
                                    </tr>								
                                    </tfoot>                                                                            
                                </table>                                
                                <p class="validationAlert error_message" id="error_message"></p>
                                <br><br>
                                <!--<p class="validationAlert send_list_value_message" id="send_list_value_message"></p>-->
                                <!--<p class="validationAlert name_add_value_message" id="name_add_value_message"></p>-->
                                <!--<p class="validationAlert email_add_value_message" id="email_add_value_message"></p>-->
                                <!--<p class="validationAlert phone_add_value_message" id="phone_add_value_message"></p>-->
                                <!--<p class="validationAlert all_duplicate_message" id="all_duplicate_message"></p>-->
                                <!--<p class="validationAlert email_duplicate_message" id="email_duplicate_message"></p>-->
                                <!--<p class="validationAlert phone_duplicate_message" id="phone_duplicate_message"></p>-->
                                <!--<p class="validationAlert excel_file_message" id="excel_file_message"></p>-->                   
                                <!--<table>
                                    <tr>
                                        <td colspan="2">
                                            <a href="javascript:void(0);" class="btn mini" style="width: 10%" id="invite_select_list">리스트(debug)</a>                                                    
                                            <a href="javascript:void(0);" class="btn mini" style="width: 10%" id="invite_msg_preview">미리보기(debug)</a>
                                        </td>                                        
                                    </tr>                                    
                                </table>  -->
                                <script id="tpl_table" type="application/json">
                                    <tr style="border:1px solid lightgray;border-radius:2px;">
                                        <td style="padding: 0px 1px 12px 12px;width:6%;">
                                            <input type="checkbox" value="<!= row.index !>">
                                        </td>
                                        <td style="padding: 0px 1px 12px 1px;width:7%;text-align:center">
                                            <! var invite_index = Number(row.index) + 1; !>
                                            <!= invite_index !>
                                        </td>
                                        <td style="padding: 15px 1px 1px 5px;width:15%;" id="name_val"><!= name_val !></td>
                                        <td style="padding: 15px 1px 1px 5px;width:38%;" id="email_val"><!= email_val !></td>
                                        <td style="padding: 15px 1px 1px 5px;width:20%;" id="phone_val"><!= phone_val !></td>                                                
                                        <td style="padding:5px 5px;width:14%;">
                                            <div class="input-group" style="padding-left: 8px;">
                                            <a href="javascript:void(0);" class="btn small" style="min-width: 0px;height:27px;width:35px" id="invite_edit_<!= row.index !>" onclick="table_invite.showEditRow(<!= row.index !>)"><i class="fas fa-edit"></i></a>
                                            <a href="javascript:void(0);" class="btn small invite_del" style="min-width: 0px;height:27px;width:35px" id="invite_del_<!= row.index !>" onclick="table_invite.remove(<!= row.index !>)"><i class="fas fa-trash-alt"></i></a>
                                            <a href="javascript:void(0);" class="btn small" style="min-width: 0px; display:none;height:27px;width:35px" id="invite_update_<!= row.index !>" onclick="table_invite.updateRow(<!= row.index !>)"><i class="fas fa-check"></i></a>
                                            <div>
                                        </td>
                                    </tr>                                            
                                </script>
                                
                                <script data-jui="#table_invite" data-tpl="none" type="application/json">
                                    <tr>
                                    <td colspan="6" class="none" align="center" style="border:1px solid lightgray;border-radius:2px;">등록된 리스트가 없습니다.</td>
                                    </tr>
                                </script>
                            </div>
                        </td>
                    </tr>
                    <!--<tr>
                        <td>
                            <h3 class="h3 pt2">메시지</h3>   
                            <br><br>
                            <div class="countWrap">
                                <textarea name="invite_msg" id="invite_msg" cols="30" rows="10" maxlength="2000"
                                    class="textarea st02"
                                    placeholder="전달할 메시지를 입력해주세요." required></textarea>
                                <span class="count"><strong><em id="byteInvite_msg">2000</em></strong>/2000자</span>
                            </div>
                            <p class="validationAlert invite_msg_message"></p>
                        </td>
                    </tr>-->
                </table>
                <h3 class="h3 pt2">메시지</h3>                
                <dl>                            
                    <dd>• 전송하실 메시지 내용을 입력해주세요..</dd>
                    <dd style="line-height:18px">• ‘{ }’가 포함된 항목은 자동으로 입력되어 전송되는 항목입니다. 임의로 수정시 내용이 변경될 수 있으니 유의해주세요.</dd>
                    <dd>• 이메일 발송시 지원방법 및 유의사항이 포함되어 발송됩니다.</dd>
                </dl>  
                <br>
                <table>
                    <td>
                        <!--<h3 class="h3 pt2">메시지</h3>  -->
                        <!--<dl>                             --> 
                        <!--    <dd>• 전송하실 메시지 내용을 입력해주세요..</dd>  -->
                        <!--    <dd>• ‘{ }’가 포함된 항목은 자동으로 입력되어 전송되는 항목입니다. 임의로 수정시 내용이 변경될 수 있으니 유의해주세요.</dd>  -->
                        <!--    <dd>• 이메일 발송시 지원방법 및 유의사항이 포함되어 발송됩니다.</dd>  -->
                        <!--</dl>     -->
                        <!--<br>-->
                        <div class="countWrap">
                            <textarea name="invite_title" id="invite_title" cols="50" rows="1" maxlength="100"
                                      class="textarea st50" required><!--[{{.EntpKoNm}}] 직감의 채용공고 지원 요청-->
                            </textarea>              
                            <a href="javascript:void(0);" class="button st01" style="min-width: 40px; line-height: 40px" id="invite_title_restore">
                                <img style="padding:6.5px" src="/static/images/iconfinder_refresh_326679.png"></img>
                            </a>
                            <!--
                            https://www.iconfinder.com/search/?q=reload : icon finder
                            https://www.iconfinder.com/icons/352439/refresh_icon
                            https://material.io/resources/icons/?icon=forward_30&style=baseline
                            https://www.iconsdb.com/white-icons/refresh-2-icon.html
                            http://www.softicons.com/toolbar-icons/glyphish-icons-by-joseph-wain/refresh-icon

                            <textarea name="invite_msg" id="invite_msg" cols="50" rows="10" maxlength="2000"
                                      class="textarea st450" required>                            
                            </textarea>
                            <a href="javascript:void(0);" class="button st02" style="min-width: 40px; line-height: 40px" id="invite_msg_restore">불러오기</a>
                            <span class="count"><strong><em id="byteInvite_msg">2000</em></strong>/2000자</span>
                            <span class="refresh">↻</span>
                            <i style="font-size:24px" class="fa">&#xf021;</i>
                            <img style="padding:8px" src="/static/images/replay-24px.svg"></img>

                            <img style="padding:8px" src="/static/images/refresh-2-16.png"></img>

                            
                            -->
                        </div>                        
                        <div class="countWrap">
                            <textarea name="invite_msg" id="invite_msg" cols="60" rows="10" maxlength="2000"
                                      class="textarea st450" required>
                                      <!--{지원자명}님, 안녕하세요.&#10;{{.EntpKoNm}}의 인사담당자 {{.PpChrgName}}입니다.&#10;직감을 통한 영상 지원을 요청하셨습니다.&#10;&#10;※ 하단 링크를 통해 앱 설치 후 자세한 채용공고 내용을 확인하실 수 있습니다.&#10;※ 채용공고 마감일 이후에는 지원이 불가하니 유의해주세요.&#10;&#10;▶ 기업명: {{.EntpKoNm}}&#10;▶ 채용공고: {채용공고 제목}&#10;▶ 직무: {1차직군} > {2차직군}&#10;▶ 바로가기: {URL1}&#10;&#10;* 직감이란? 직감은 영상 기반의 채용 서비스를 제공하는 플랫폼입니다. 모바일 어플리케이션을 다운로드하여 진행하실 수 있습니다.&#10;직감 영상 인터뷰 가이드 바로가기: {URL2}&#10;* 수신자 정보는 30일 후 자동 삭제됩니다. 즉시 삭제를 원하실 경우 [바로가기] 링크를 통해 삭제 요청을 하실 수 있습니다.&#10;* 영상 인터뷰 관련 문의 : support@ziggam.com-->
                            </textarea>
                            <a href="javascript:void(0);" class="button st01" style="min-width: 40px; line-height: 40px" id="invite_msg_restore">
                                <img style="padding:6.5px" src="/static/images/iconfinder_refresh_326679.png"></img>
                            </a>
                            <span class="count"><strong><em id="byteInvite_msg">2000</em></strong>/2000자</span>
                            <!-- https://material.io/resources/icons/?icon=autorenew&style=baseline -->
                        </div>                          
                        
                    </td>                    
                </table>
            </div>              
            <p class="validationAlert invite_title_message"></p>
            <p class="validationAlert invite_msg_message"></p>            
            <br>
            <!--<div class="tForm">-->
            <div>                
                <a href="javascript:void(0);" class="btn small" style="min-width: 40px; line-height: 40px" id="invite_msg_preview">미리보기</a>                                       
                <!--<a href="javascript:void(0);" class="btn small" style="min-width: 40px; line-height: 40px">메시지 제목 불러오기</a>-->
                <!--<a href="javascript:void(0);" class="btn small" style="min-width: 40px; line-height: 40px" id="invite_msg_restore">기본 메시지 불러오기</a>-->
            </div>        
            <!--</div>-->            
            <div class="tForm">
                <h3 class="h3 pt3">테스트 전송</h3>   
                <br><br>
                <table>
                    <tr>
                        <td>
                            <div class="jui" id="invite_send_test_area" style="display:1;width: 641px;">
                                <div class="input-group">
                                    <input type="text" name="name_add_value_test" id="name_add_value_test" class="it form-control" maxlength="50"
                                        class="it" placeholder="이름" aria-label="name_add_value_test"
                                        aria-describedby="basic-addon1" style="margin-left:0px; width:8%; height: 28px;" value="{{.PpChrgName}}"> 
                                    <input type="text" name="email_add_value_test"  id="email_add_value_test" class="it form-control" maxlength="50"
                                        class="it" placeholder="메일 주소" aria-label="email_add_value_test"
                                        aria-describedby="basic-addon1" style="margin-left:0px; width:18%; height: 28px;" value="{{.ppChrgEmail}}">
                                    <input type="text" name="phone_add_value_test" id="phone_add_value_test" class="it form-control" maxlength="50"
                                        class="it" placeholder="휴대폰 번호('-' 포함)" aria-label="phone_add_value_test"
                                        aria-describedby="basic-addon1" style="margin-left:0px; width:12%; height: 28px;" value="{{.ppChrgTelNo}}">                                            
                                    <div class="form-control">
                                        <a href="javascript:void(0);" id="invite_send_test" class="form-control" style="width: 100%">
                                            <span class="btn normal" style="width: 70%;font-size:13px">테스트 보내기</span>
                                        </a>
                                    </div>                                            
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>                
            </div>      
            <p class="validationAlert test_error_message" id="test_error_message"></p>          
        </div>  
        <!--
        <div class="tForm">
            <br>
            <table>
                <tr>
                    <td colspan="2">
                        <a href="javascript:void(0);" class="btn mini" style="width: 10%" id="invite_select_list">리스트(debug)</a>                                                    
                        <a href="javascript:void(0);" class="btn mini" style="width: 10%" id="invite_msg_preview">미리보기(debug)</a>
                    </td>                                        
                </tr>                                    
            </table>  
        </div>
        -->   
        <div class="btnSet">                     
            <a href="javascript:void(0);" class="btn type_blue st02" id="btn_cancel_main">취소</a>
            <a href="javascript:void(0);" class="btn type_blue st02" id="btn_send_main">보내기</a>                    
        </div>            
	</form>
</div>    
</form>    

<!-- 1개 이상의 리스트  확인 -->
<div class="popupWrap common_alert" id="pop_check_alert">
    <div class="popLayer">
        <div class="popCont">
            <p class="text alert" id="alert_text"></p>
        </div>
        <div class="btnSet">            
            <a href="javascript:void(0);" class="btn" onclick="closePopup()">확인</a>
        </div>
    </div>
    <span class="cover"></span>
</div>
</div>
<!-- 보내기 -> 보내기 -> 확인 -->
<div class="popupWrap common_alert" id="pop_complete_alert">
    <div class="popLayer">
        <div class="popCont">
            <p class="text alert">초대 메시지 전송 요청이 완료되었습니다.</p>
        </div>
        <div class="btnSet">
            <a href="javascript:void(0);" class="btn" id="pop_close_btn">확인</a>
        </div>
    </div>
    <span class="cover"></span>
</div>

<!-- 보내기 -> 보내기 -> 실패 -->
<div class="popupWrap common_alert" id="pop_send_fail_alert">
    <div class="popLayer">
        <div class="popCont">
            <p class="text alert" id="fail_alert_text"></p>
        </div>
        <div class="btnSet">
            <a href="javascript:void(0);" class="btn" onclick="closePopup()">확인</a>
        </div>
    </div>
    <span class="cover"></span>
</div>

<!-- 보내기 확인 팝업 -->
<div class="popupWrap" id="invite_send_pop">
    <div class="popLayer">
        <div class="popCont">
            <p class="tit2">채용공고 초대 메시지를 전송하시겠어요?</p>
            <p class="text">전송 후에는 취소가 불가능합니다.</p>
        </div>
        <div class="btnSet">
            <a href="javascript:void(0);" class="btn" onclick="closePopup()">취소</a>
            <a href="javascript:void(0);" class="btn type_red" id="btn_send_confirm">보내기</a>
        </div>
    </div>
    <span class="cover"></span>
</div>
<!-- 보내기 확인 팝업 -->

<!-- 보내기 취소 팝업 -->
<div class="popupWrap" id="invite_send_cancel_pop">
    <div class="popLayer">
        <div class="popCont">
            <p class="tit">정말 취소하시겠어요?</p>
            <p class="text">입력하신 내용은 저장되지 않습니다.</p>
        </div>
        <div class="btnSet">
            <a href="javascript:void(0);" class="btn" onclick="closePopup()">계속하기</a>
            <a href="javascript:void(0);" class="btn type_red" id="btn_send_cancel">취소하기</a>
        </div>
    </div>
    <span class="cover"></span>
</div>
<!-- 보내기 취소 팝업 -->

<!--<div id="dialog-message" style='display:none'></div>-->

<script src="/static/js/excel.min.js"></script>
<script type="text/javascript">        
    
    const LIST_COUNT = 100;     // 리스트 입력 갯수    
    const NAME_CHECK_LEN = 50;  // 이름 입력 길이
    const LIST_NONE_CHAR = "-";  // 이메일/휴대폰 발송 제외 토큰

    const TITLE_TEMPLATE = "[{{.EntpKoNm}}] 직감의 채용공고 지원 요청";
    const MSG_TEMPLATE = "{지원자명}님, 안녕하세요.\n{{.EntpKoNm}}의 인사담당자 {{.PpChrgName}}입니다.\n직감을 통한 영상 지원을 요청하셨습니다.\n\n※ 하단 링크를 통해 앱 설치 후 자세한 채용공고 내용을 확인하실 수 있습니다.\n※ 채용공고 마감일 이후에는 지원이 불가하니 유의해주세요.\n\n▶ 기업명: {{.EntpKoNm}}\n▶ 채용공고: {채용공고 제목}\n▶ 직무: {1차직군} > {2차직군}\n▶ 바로가기: {URL1}\n\n* 직감이란? 직감은 영상 기반의 채용 서비스를 제공하는 플랫폼입니다. 모바일 어플리케이션을 다운로드하여 진행하실 수 있습니다.\n직감 영상 인터뷰 가이드 바로가기: {URL2}\n* 수신자 정보는 30일 후 자동 삭제됩니다. 즉시 삭제를 원하실 경우 [바로가기] 링크를 통해 삭제 요청을 하실 수 있습니다.\n* 영상 인터뷰 관련 문의 : support@ziggam.com";

    const name_check_msg = "이름을 입력해주세요.";
    const email_check_msg = "이메일 주소를 입력해주세요.";
    const phone_check_msg = "휴대폰 번호를 입력해주세요.";        

    const invalid_format_check_msg = "잘못된 형식입니다.";        

    const duplicate_check_msg = "중복된 데이터는 입력할 수 없습니다.";        
    
    const duplicate_all_msg = "중복된 데이터는 입력할 수 없습니다.";        
    const duplicate_email_msg = "중복된 이메일 주소는 입력할 수 없습니다.";        
    const duplicate_phone_msg = "중복된 휴대폰 번호는 입력할 수 없습니다.";      
    
    //const list_from_excel = [];

    $(document).ready(function () {
        $('input.custom').customInput();

        $(`#recuit_select_cd option:eq(${"{{.GbnCd}}"})`).attr("selected", "selected");

        $("#regForm").validate(validOption);
        
        var initVals = [];     
        var initList = {{.InitList}};
        if (initList != "") {
            console.log(JSON.stringify(initList));

            var jsonObj = JSON.parse(initList);
            
            for(var i = 0; i < jsonObj.length; i++) {
                var __val = jsonObj[i];
                
                initVals.push({name_val: __val.n, email_val: __val.e, phone_val: __val.p});                
            }            
        }

        console.log(JSON.stringify(initVals));

        setInviteArea(initVals);

        //check_count_invite_list();
                 
        var initRecrutSn = {{.InitRecrutSn}};

        console.log("InitList: " + JSON.stringify(initList));
        console.log("InitRecrutSn: " + initRecrutSn);

        $("#recuit_select_list").val(initRecrutSn).change();

        var fileTarget = $('.filebox .upload-hidden');             
        fileTarget.on('change', function() { // 값이 변경되면 
            if(window.FileReader){ // modern browser 
                var filename = $(this)[0].files[0].name; 
            } 
            else { // old IE 
                var filename = $(this).val().split('/').pop().split('\\').pop(); // 파일명만 추출 
            } // 추출한 파일명 삽입 
            
            $(this).siblings('.upload-name').val(filename); 
        }); 

        // 메세지 기본 내용 셋팅
        $('#invite_title').val(TITLE_TEMPLATE);        
        $('#invite_msg').val(MSG_TEMPLATE);        
        
        //window.location.href="/invite/send";
        //window.location.replace("/invite/send");
        // 초기화 리스트로 온 url 을 지우기 위해.
        window.history.pushState(null, null, "/invite/send");

        console.log("[refresh_flag] " + $("#refresh_flag").val() );        
    });

    // $(document).onload(function () {
    //     //check_count_invite_list();
    // });

    // window.onbeforeunload = function() {
    //   return "Data will be lost if you leave the page, are you sure?";
    // };

    $(window).on("beforeunload", function() {
        var invite_list = table_invite.listAll();

        // 래프레시 경고창 skip
        // 보낸후 다른페이지로 이동 상황에는 묻지 않는다
        if($("#refresh_flag").val() == "1" )    
            return;
        
        if (invite_list.length > 0 || $("#title_message_input_flag").val() == "1") 
            return "Data will be lost if you leave the page, are you sure?";
    });

    var setErrorMessage = function (id, msg) {
        //$("." + id + "_message").text(msg);
        $("#"+id).text(msg);
        $("#"+id).addClass("validationAlert");
    }

    var clearErrorMessage = function (id) {
        // $("." + id + "_message").text(""); 
        // $("#" + id).removeClass("validationAlert");

        $("#"+id).text("");
        $("#"+id).removeClass("validationAlert");
    }

    // input box reset
    var resetInput = function (id) {
        //console.log("id : "+id);
        $("." + id + "_message").text(""); // message box clear
    }

    var validOption = {
        onkeyup: false, 
        onclick: false, 
        onfocusout: function (element) {		    // 포커스 아웃 시 동작
            if ($(element).valid()) {			    // 체크 통과
                var id = $(element).attr("id");
                //console.log("onfocusout id : "+id);
                $("." + id + "_message").text("");	// message box clear
            }
        },
        onfocusin: function (element) {			    // 포커스 인 시 동작
            var id = $(element).attr("id");
            //console.log("onfocusin id : "+id);
            $("#" + id).removeClass("validationAlert");
            resetInput(id);
        }, 
        rules: {
            recuit_select_cd: {
                required: true,
            },
            recuit_select_list: {
                required: true,
            },            
            invite_title: {
                required: true,
            },              
            invite_msg: {
                required: true,
            }
        }, 
        errorPlacement: function (error, element) {
            var id = element.attr("id");            
            $("." + id + "_message").text(error.text());
            $("#" + id).addClass("validationAlert");
        }, 
        messages: {
            recuit_select_cd: {
                required: "채용 타입을 선택해주세요."
            },
            recuit_select_list: {
                required: "채용 공고를 선택해주세요."
            },           
            invite_title: {
                required: "메시지 제목을 입력해주세요."
            },                     
            invite_msg: {
                required: "메시지 내용을 입력해주세요."
            }                     
        }, 
        success: function (element) {
            var str = $(element).attr("id");
            var id = str.substring(0, str.length - 6);
            $("#" + id).removeClass("validationAlert");
        }
    }

    // 채용 공고 종류 선택시
    $(document).off("change", "#recuit_select_cd").on("change", "#recuit_select_cd", function () {        
        var recruit_cd = $('select[id=recuit_select_cd] option:selected').val();
    
        recruitList(recruit_cd);
    })
    
    $(document).off("change", "#recuit_select_list").on("change", "#recuit_select_list", function () {        
        var recruit_cd = $('select[id=recuit_select_cd] option:selected').val();
        //var temp_html = $('select[id=recuit_select_list] option:selected').html();

        var select_data = $('select[id=recuit_select_list] option:selected')

        var recruit_sn = $('select[id=recuit_select_list] option:selected').val()
        var up_job_grp = select_data.data("up_job_grp");
        var job_grp = select_data.data("job_grp");
        var recruit_title = select_data.data("recruit_title");

        //data-up_job_grp="{{.SUpJobGrp}}" data-job_grp="{{.SJobGrp}}" data-recruit_title="{{.SRecrutTitle}}"
        //var temp_html2 = temp_html.split(">");

        console.log(`[recuit_select_list] recruit_cd:${recruit_cd}, recruit_sn:${recruit_sn}, up_job_grp:${up_job_grp}, job_grp:${job_grp}, recruit_title:${recruit_title}`)
        
        // $('#invite_msg').html(function(index,html){
        //     return html.replace('{채용공고 제목}','data3');
        // });
    })
     
    var recruitList = function (recruit_cd) {
        $.ajax({
            type: "POST",
            url: "/invite/recurit/list",
            data: {
                recruit_cd: recruit_cd
            },
            dataType: "json",
            success: function (args) {
                if(args.RtnRecruitSubListData) {
                    if (args.RtnRecruitSubListData.length > 0) {                        
                        $("#recuit_select").find("span").children().remove();
                        var html = "";
                        html += "<select class=\"select wid580\" name=\"recuit_select_list\" id=\"recuit_select_list\" required>";
                        html += "<option value=\"\" disabled selected>채용 공고를 선택해 주세요.</option>";
                        $.each(args.RtnRecruitSubListData, function (e) {
                            var grp1 = args.RtnRecruitSubListData[e];
                            //html += "<option value='" + grp1.SRecrutSn + "'>" + "[" + grp1.SUpJobGrp + ">" + grp1.SJobGrp + "] " + grp1.SRecrutTitle + "</option>";
                            html += "<option value='" + grp1.SRecrutSn + "'";
                            html += "        data-up_job_grp='" + grp1.SUpJobGrp + "'";
                            html += "        data-job_grp='" + grp1.SJobGrp + "'";
                            html += "        data-recruit_title='" + grp1.SRecrutTitle+ "'" + ">";
                            html += "[" + grp1.SUpJobGrp + ">" + grp1.SJobGrp + "] " + grp1.SRecrutTitle + "</option>";
                        })
                        html += "</select>";                        
                        $("#recuit_select").find("span").append(html);
                    } else {
                        console.log("no-data");
                        $("#recuit_select").find("span").children().remove();
                        var html = "";
                        html += "<select class=\"select wid580\" name=\"recuit_select_list\" id=\"recuit_select_list\">";
                        html += "<option value=\"\" disabled selected>채용 공고를 선택해 주세요.</option>";
                        html += "</select>";                        
                        $("#recuit_select").find("span").append(html);
                    }
                } else {
                    console.log("[ajax][/invite/recurit/list] to /login");
                    window.location.href = "/login";
                }
            },
            error: function (e) {
                console.log("[ajax][/invite/recurit/list] error");
                alert("fail " + e.responseText);
            }
        });
    }
    
    $(document).off("click", "#add_invite").on("click", "#add_invite", function () {
        if (!check_max_count_invite_list()) {            
            console.log("[add_invite] Check Max Count !!")

            // setErrorMessage("error_message", "입력 갯수를 초과 했습니다");
            // alert("입력 갯수를 초과 했습니다");

            openPopup('pop_check_alert');
            $("#alert_text").html("입력 갯수를 초과 했습니다.");
            
            check_count_invite_list();
            return;            
        }
                        
        var name_add_value = $("#name_add_value").val();
        var email_add_value = $("#email_add_value").val();
        var phone_add_value = $("#phone_add_value").val();            
       
        console.log(`[add_invite] name_add_value:${name_add_value}, email_add_value:${email_add_value}, phone_add_value:${phone_add_value}`);

        var __push_data = {
            name_val: name_add_value, 
            email_val: email_add_value.length <= 0 ? LIST_NONE_CHAR : email_add_value,
            phone_val: phone_add_value.length <= 0 ? LIST_NONE_CHAR : phone_add_value
        };
        
        //전화 번호 포맷부터 변경    
        // __push_data.phone_val = String(__push_data.phone_val).replace(/[^0-9]/g, "")
        //                                                      .replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3")
        //                                                      .replace("--", "-");
        
        var __error_code;    
        if ((__error_code=check_argument_invite_list(__push_data)) != 0)
        {
            if (__error_code == 1) { 
                alert("null");                
            } else if (__error_code == 2) {                
                setErrorMessage("error_message", name_check_msg);
            } else if (__error_code == 3|| __error_code == 6) {
                setErrorMessage("error_message", email_check_msg);
            } else if (__error_code == 4) {
                setErrorMessage("error_message", phone_check_msg);                
            } else {    // 5
                setErrorMessage("error_message", invalid_format_check_msg);                                
            }
            
            return false;         
        }
        
        var error_code;
        if ((error_code=check_duplicate_invite_list(__push_data, true, true, true,true)) != 0) {
            if (error_code == 1) {
                //alert(duplicate_all_msg);
                //$("#all_duplicate_message").text(duplicate_all_msg);
                //setErrorMessage("all_duplicate_message", duplicate_all_msg);
                setErrorMessage("error_message", duplicate_all_msg);
            }
            else if (error_code == 2) {   
                //alert(duplicate_email_msg);
                //$("#email_duplicate_message").text(duplicate_email_msg);
                //setErrorMessage("email_duplicate_message", duplicate_email_msg);
                setErrorMessage("error_message", duplicate_email_msg);
            }
            else {
                //alert(duplicate_phone_msg);
                //$("#phone_duplicate_message").text(duplicate_phone_msg);
                //setErrorMessage("phone_duplicate_message", duplicate_phone_msg);
                setErrorMessage("error_message", duplicate_phone_msg);
            }

            return false;
        } 
        
        table_invite.append(__push_data);
        console.log("[add_invite] added: " + JSON.stringify(__push_data));        
        
        $("#name_add_value").val('');
        $("#email_add_value").val('');
        $("#phone_add_value").val('');            

        check_count_invite_list();
    });

    // 전체 선택
    $(document).off("click", "#invite_select_all").on("click", "#invite_select_all", function () {
        var table = $(this).closest('table');
        var checkbox_list = $(table).find('input:checkbox');
        var checked = $(table).find('input:checkbox').length == $(table).find('input:checkbox:checked').length ? false : true;

        // 전체선택되어있음 전체해제 아님 전체선택
        $(checkbox_list).prop('checked', checked);		
        checked == true ? false : true;
    });

    var allCheck = function (check_value) {
        //console.log(check_value);
        
        if (check_value == "1") {
            console.log("checked");
            $("#check_all_list").val("1");
            $('input:checkbox[name="tbl_check"]').parent().parent().parent().addClass("check");
            $('label[name="tbl_check"]').addClass("checked");
            $('input:checkbox[name="tbl_check"]').prop("checked", true);
        } else {
            console.log("unchecked");
            $("#check_all_list").val("0");
            $('input:checkbox[name="tbl_check"]').parent().parent().parent().removeClass("check");
            $('label[name="tbl_check"]').removeClass("checked");
            $('input:checkbox[name="tbl_check"]').prop("checked", false);
        }
    }

    // 선택 삭제
    $(document).off("click", "#invite_select_delete").on("click", "#invite_select_delete", function () {
        var tr_list = $("#table_invite").find('tr');
        if (tr_list.length > 0) {
            for (var i = tr_list.length - 1; i >= 1; i--) {
                var tr = tr_list[i];
                var checkbox = $(tr).find('input:checkbox')[0];
                if (checkbox != null && checkbox != undefined && checkbox.checked == true) {
                    $(tr).find('.invite_del')[0].click();
                }                
            }
        }
        check_count_invite_list();            
    });	

    $(document).off("click", ".invite_del").on("click", ".invite_del", function () {
        check_count_invite_list();
        //console.log("===================== invite_del")
    });	
    
    $(document).off("click", "#invite_select_list").on("click", "#invite_select_list", function () {
        
        // var invite_list_arr = "";
        // var invite_list = table_invite.listAll();        
        
        // console.log("[invite_select_list] Length: " + invite_list.length)
        // for (var i = 0; i < invite_list.length; i++) {			
        //     invite_list_arr += invite_list[i].data.name_val + "," + invite_list[i].data.email_val  + "," + invite_list[i].data.phone_val + ",";
        //     console.log(`[invite_select_list] name_val:${invite_list[i].data.name_val}, email_val:${invite_list[i].data.email_val}, phone_val:${invite_list[i].data.phone_val}` )
        // }
        
        // invite_list_arr = invite_list_arr.slice(0, invite_list_arr.length - 1);	// 끝의 ',' 삭제하기 위해
                    
        // console.log("[invite_select_list] " + invite_list_arr)

        // var param = [];
        // for (var i = 0; i < invite_list.length; i++) {			
        //     invite_list_arr += invite_list[i].data.name_val + "," + invite_list[i].data.email_val + "," + invite_list[i].data.phone_val + ",";
        //     param.push({name:invite_list[i].data.name_val,email:invite_list[i].data.email_val,phone:invite_list[i].data.phone_val});
        // }
        // console.log(param)

        // var recrut_sn = $("select[id=recuit_select_list] option:selected").val();             
        // var send_message = $("#invite_msg").val().replace(/'/gi, "`"); 
        // 임시 
        // $.ajax({
        //     type: "POST",
        //     url: "/invite/send",
        //     data: {
        //         recruit_sn: recrut_sn,
        //         send_list: JSON.stringify(param),
        //         send_msg : send_message
        //     },
        //     dataType: "json",
        //     success: function (args) {
        //         console.log(args);
        //     },
        //     error: function (e) {
        //         alert("fail " + e.responseText);
        //     }
        // });

        // $("#invite_select_all").trigger("click");
        // $("#invite_select_delete").trigger("click");

        print_list_debug();        				
    });

    $(document).off("click", "#invite_msg_preview").on("click", "#invite_msg_preview", function () {
        var popW = 400;
		var popH = 600;
		var popX = (screen.width / 2) - (popW/2);
        var popY = (screen.height / 2) - (popH/2);
        // var popX = (screen.width - popW) / 2;
        // var popY = (screen.height - popH) / 4;
        
        var recruit_cd = $('select[id=recuit_select_cd] option:selected').val();        

        var select_data = $('select[id=recuit_select_list] option:selected')

        var recruit_sn = $('select[id=recuit_select_list] option:selected').val();
        
        var entp_ko_nm = "{{.EntpKoNm}}";
        var pp_chrg_nm = "{{.PpChrgName}}";

        var up_job_grp = select_data.data("up_job_grp");
        var job_grp = select_data.data("job_grp");
        var recruit_title = select_data.data("recruit_title");

        var invite_tit = $('#invite_title').val();
        var invite_msg = $('#invite_msg').val();
       
        var uri = `/invite/send/msg/preview?entp_ko_nm=${entp_ko_nm}&pp_chrg_nm=${pp_chrg_nm}&up_job_grp=${up_job_grp}&job_grp=${job_grp}&recruit_title=${recruit_title}&invite_tit=${invite_tit}&invite_msg=${invite_msg}`;
        var encodedUri = encodeURI(uri);

        var result = window.open(encodedUri,
								 "_blank",
								 "width=" + popW + ",height=" + popH + ",left=" + popX + ",top=" + popY + ",resizable=0")		
        // var result = window.open(`/invite/send/msg/preview?entp_ko_nm=${entp_ko_nm}&pp_chrg_nm=${pp_chrg_nm}&up_job_grp=${up_job_grp}&job_grp=${job_grp}&recruit_title=${recruit_title}&output_html=${output_html}`,
		// 									 "_blank",
		// 									 "width=" + popW + ",height=" + popH + ",left=" + popX + ",top=" + popY + ",resizable=0")		
		result.focus();			

		result.onbeforeunload = function(){ 	

		}				
    });
    
    $(document).off("click", "#invite_title_restore").on("click", "#invite_title_restore", function () {    
        $('#invite_title').val('');
        $('#invite_title').val(TITLE_TEMPLATE);        
    });

    $(document).off("click", "#invite_msg_restore").on("click", "#invite_msg_restore", function () {            
        $('#invite_msg').val('');
        $('#invite_msg').val(MSG_TEMPLATE);        
    });

    // 입력된거 체크
    $("#invite_title").on("propertychange change keyup paste input", function() {
        $("#title_message_input_flag").val("1"); 
    });

    // 입력된거 체크
    $("#invite_msg").on("propertychange change keyup paste input", function() {
        $("#title_message_input_flag").val("1"); 
    });

    function check_max_count_invite_list() {
        var invite_list = table_invite.listAll();        
        
        return LIST_COUNT > invite_list.length;
    }

    function check_duplicate_invite_list(args, is_all, is_name, is_email, is_phone) {
        var invite_list = table_invite.listAll();                            
        
        var error_code = 0;
        if (args) {           

            var find_result;

            if (is_all) {
                find_result = invite_list.find( (item, idx) => {
                    return (item.data.name_val == args.name_val &&
                            item.data.email_val == args.email_val &&
                            item.data.phone_val == args.phone_val);
                });

                if (find_result != undefined)
                    console.log("check_1 " + JSON.stringify(find_result.data));
                
                if (find_result != undefined) {
                    console.log('================== duplicate all')
                    return 1;
                }
            }

            if (is_email && args.email_val != LIST_NONE_CHAR) {
                find_result = invite_list.find( (item, idx) => {
                    return (item.data.email_val == args.email_val);
                });
                
                if (find_result != undefined)
                    console.log("check_2 " + JSON.stringify(find_result.data));

                if (find_result != undefined) {
                    console.log('================== duplicate email_val')
                    return 2;
                }          
            }

           if (is_phone && args.phone_val != LIST_NONE_CHAR) {
                find_result = invite_list.find( (item, idx) => {
                    return (item.data.phone_val == args.phone_val);
                });
                
                if (find_result != undefined)
                    console.log("check_3 " + JSON.stringify(find_result.data));

                if (find_result != undefined) {
                    console.log('================== duplicate phone_val')
                    return 3;
                }                    
           }
        }
        
        return error_code;
    }

    function check_argument_invite_list(input_data) {
        if (!input_data)
            return 1;

        console.log(`[check_argument_invite_list] ${JSON.stringify(input_data)}`);

        var result_code = 0;
        input_data.name_val = input_data.name_val.replace(/,/gi, "，").replace(/'/gi, "`");
        if (input_data.name_val.length == 0 || input_data.name_val.length > NAME_CHECK_LEN) {            
            return 2;
        }

        // if (input_data.email_val.length == 0 && String(input_data.phone_val).length == 0){            
        //     return 5;
        // }
        if (input_data.email_val == LIST_NONE_CHAR && input_data.phone_val == LIST_NONE_CHAR) {
             return 5;
        }

        // .,;:\s@ -> .,';:\s@ : ['] 추가
        var re_email = /^(([^<>()[\]\\.,';:\s@\"]+(\.[^<>()[\]\\.,';:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        //var __chk_email = input_data.email_val.match(/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);        
        //if (__chk_email == null || __chk_email != input_data.email_val) {            
        // if (input_data.email_val.length > 0 && !re.test(input_data.email_val)) {
        //     return 3;
        // }
        if (input_data.email_val != LIST_NONE_CHAR && !re_email.test(input_data.email_val)) {
             return 3;
        }
        
        // 한번 더 체크
        var re_email2 = /'|,/g; // 해당 문자가 있으면 오류(DB 에서 사용)
        if (input_data.email_val != LIST_NONE_CHAR && re_email2.test(input_data.email_val)) {
             return 6;
        }        

        // 전화번호 포맷으로 
        //__check_data.phone_val = String(__check_data.phone_val).replace(/[^0-9]/g, "").replace(
        //    /(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3").replace("--", "-");

        var re_phone =/^01(?:0|1|[6-9])-(?:\d{3}|\d{4})-\d{4}$/ // "-" 체크
        //var re_phone = /^[0-9]{3}[-]+[0-9]{4}[-]+[0-9]{4}$/;        
        // var __chk_phone = String(input_data.phone_val).match(/^[0-9]{3}[-]+[0-9]{4}[-]+[0-9]{4}$/);
        // if (__chk_phone == null || __chk_phone != input_data.phone_val) {
        // if (input_data.phone_val.length > 0 && !re2.test(input_data.phone_val)) {
        //     return 4;
        // }
        if (input_data.phone_val != LIST_NONE_CHAR && !re_phone.test(input_data.phone_val)) {
            return 4;
        }

        return 0;
    }

    function print_list_debug(str) {
        var invite_list = table_invite.listAll();                   
        
        for (var i = 0; i < invite_list.length; i++) {			
            console.log(str + "=> name_val:" + invite_list[i].data.name_val + ", email_val:" + invite_list[i].data.email_val + ", phone_val:" + invite_list[i].data.phone_val);
        }        
    }

    function print_list_debug2(str) {
        var tr_list = $("#table_invite").find('tr');
        if (tr_list.length > 0) {
            for (var i = 0; i < tr_list.length; i++) {
                var tr = tr_list[i];                
                
                // console.log(tr);
                // $(tr).find('.invite_del')[0].click();

                //console.log($(tr).find('.invite_del')[0]);
                // if($(tr).find('.invite_del')[0])
                //     $(tr).find('.invite_del')[0].click();


                // var tds = $(tr).find("td[id='name_val']").val();
                // console.log("=== " + tds);

                //var checkbox = $(tr).find('input:checkbox')[0];
                // var __name = $(tr).find('#name_val').val();
                // var __email = $(tr).find('#email_val').val();
                // var __phone = $(tr).find('#phone_val').val();                
                // // var __name = $(tr).find('input:edit')[0];
                // // var __email = $(tr).find('input:edit')[1];
                // // var __phone = $(tr).find('input:edit')[2];
                // console.log( `=== ${__name},  ${__email}, ${__phone}` );
                // var checkbox = $(tr).find('input:checkbox')[0];
                // if (checkbox != null && checkbox != undefined && checkbox.checked == true) {
                //     $(tr).find('.invite_del')[0].click();
                // }
                
                //var td = $(tr).children()
                // var __email = $(tr).find('td').find('#email_val').val();
                // var __phone = $(tr).find('td').find('#phone_val').val();

                //console.log( `=== ${__name},  ${__email}, ${__phone}` );

                //$(tr).find('.invite_del')[0].click();

                //var tdArray = new Array(); // 배열선언
                var count = 0;
                $(tr).children().each(function(i, val){
                     //tdArray.push(td.eq(i).text());
                     //tdArray.push(td.eq(i).html());
                    //  console.log("=== 1 " + $(val).text() );
                    //  console.log("=== 2" + $(val).find('#name_val').val());
                    //  console.log("=== 3" + $(val).find('#email_val').val());
                    //  console.log("=== 4" + $(val).find('#phone_val').val());

                    //  console.log("=== 2" +$(val).find("td[id='name_val']"));
                    //  console.log("=== 2" +$(val).find("td[id='email_val']"));
                    //  console.log("=== 2" +$(val).find("td[id='phone_val']"));
                    //console.log("=== " + val);

                    //console.log('td ID: ' + $(this).attr('id'));
                    if ($(this).attr('id') == "name_val")
                        //console.log("=== 1 " + $(val).text() );
                        count += ($(val).text() == "이체크2") ? 1 : 0;

                    if ($(this).attr('id') == "email_val")
                        //console.log("=== 2 " + $(val).text() );
                        count += ($(val).text() == "dongkale@qrate.com") ? 1 : 0;

                    if ($(this).attr('id') == "phone_val")
                        count += ($(val).text() == "010-9999-9998") ? 1 : 0;                

                });

                if(count == 3 && $(tr).find('input:checkbox'))
                    $(tr).find('input:checkbox').prop("checked", true); 

                //$("input:checkbox[id='ID']").prop("checked", true); 


                //$(tr).find('.invite_del')[0].click();

                console.log("count : " + count);
            }
        }        

        // var name_val = $("#table_invite").find('input.edit').eq(0).val();
        // var email_val = $("#table_invite").find('input.edit').eq(1).val();
        // var phone_val = $("#table_invite").find('input.edit').eq(2).val();

        // console.log("==[33] ==> name_val:" + name_val + ", email_val:" + email_val + ", phone_val:" + phone_val);

        // var invite_list = table_invite.listAll();                   
        
        // console.log( table_invite );

        // var find_result = invite_list.find( (item, idx) => {
        //     console.log("== " + idx + "==> name_val:" + item.data.name_val + ", email_val:" + item.data.email_val + ", phone_val:" + item.data.phone_val);

        //     return idx;
        // });

        // table_invite.remove();
        // table_invite.remove(1);
        // table_invite.remove(2);
        // table_invite.remove(3);
        // table_invite.remove(4);
        

        // for (var i = 0; i < invite_list.length; i++) {			
        //     console.log("=> name_val:" + invite_list[i].data.name_val + ", email_val:" + invite_list[i].data.email_val + ", phone_val:" + invite_list[i].data.phone_val);

        //     console.log( invite_list[i] );    

        //     invite_list[i].destroy();

        //     //invite_list[i].dest.data.remove();                
        //     //table_invite.remove(0);
        // }     

        // table_invite.each( function(index) {

        //     var __get = table_invite.getIndexToRow(index);

        //     console.log( `=== ${JSON.stringify(__get)}` );

        // });

        // $("#table_invite").find('input.edit').each( function (index) {

        //     var __get = table_invite.getIndexToRow(index);

        //     console.log( `=== ${JSON.stringify(__get)}` );

        //     //table_invite.removeRow (index);
                
        // });

        // table_invite.remove()

        // var name_val = $("#table_invite").find('input.edit').eq(0).val();
        //         var email_val = $("#table_invite").find('input.edit').eq(1).val();
        //         var phone_val = $("#table_invite").find('input.edit').eq(2).val();
    }
    
    // function add_list_from_excel(push_arg) {
    //     list_from_excel.push({name_val:push_arg.name_val, email_val:push_arg.email_val, phone_val:push_arg.phone_val})
    // }

    // function del_list_from_excel(find_arg) {
    //     const idx = list_from_excel.findIndex(function(item) {return item.name_val === find_arg.name_val && item.email_val === find_arg.email_val && item.phone_val === find_arg.phone_val})
    //     if (idx > -1) 
    //         list_from_excel.splice(idx, 1)
    // }

    // function update_list_from_excel(find_arg, up_arg) {
    //     const idx = list_from_excel.findIndex(function(item) {return item.name_val === find_arg.name_val && item.email_val === find_arg.email_val && item.phone_val === find_arg.phone_val})
    //     if (idx > -1) 
    //         list_from_excel[index] = up_arg;        
    // }

    // function all_del_list_from_excel(find_arg) {
    //     const idx = list_from_excel.findIndex(function(item) {return item.name_val === find_arg.name_val && item.email_val === find_arg.email_val && item.phone_val === find_arg.phone_val})
    //     if (idx > -1) 
    //         list_from_excel.splice(idx, 1)
    // }

    // function checked_invite_list(arg) {
    //     var tr_list = $("#table_invite").find('tr');
    //     if (tr_list.length > 0) {
    //         for (var i = 0; i < tr_list.length; i++) {
    //             var tr = tr_list[i];                            

    //             var count = 0;
    //             $(tr).children().each(function(i, val){
    //                  if ($(this).attr('id') == "name_val")                        
    //                     count += ($(val).text() == arg.name_val) ? 1 : 0;

    //                 if ($(this).attr('id') == "email_val")                        
    //                     count += ($(val).text() == arg.email_val) ? 1 : 0;

    //                 if ($(this).attr('id') == "phone_val")
    //                     count += ($(val).text() == arg.phone_val) ? 1 : 0;
    //             });

    //             if(count == 3 && $(tr).find('input:checkbox'))
    //                 $(tr).find('input:checkbox').prop("checked", true); 
    //         }
    //     }
    // }

    function check_count_invite_list() {
        // var trCnt = $("#table_invite").find('tr').length;
        // $("#tr_cnt").val(trCnt);
        
        // var trCntCheck = $("#table_invite").find('input:checkbox').length; // --> 질문 실제 갯수        
        
        if (check_max_count_invite_list()) {
            //$("#add_invite").show();
            //$("#add_invite").removeAttr("disabled");

            // $("#add_invite").css({ 'pointer-events': '' });
            // $("#name_add_value").prop('readonly', false)
            // $("#email_add_value").prop('readonly', false)
            // $("#phone_add_value").prop('readonly', false)

            $("#add_invite").show();
            $("#name_add_value").show();
            $("#email_add_value").show();
            $("#phone_add_value").show();
        } else { 
            //$("#add_invite").hide();
            //$("#add_invite").attr("disabled", "disabled");

            // $("#add_invite").css({ 'pointer-events': 'none' });
            // $("#name_add_value").prop('readonly', true)
            // $("#email_add_value").prop('readonly', true)
            // $("#phone_add_value").prop('readonly', true)

            $("#add_invite").hide();
            $("#name_add_value").hide();
            $("#email_add_value").hide();
            $("#phone_add_value").hide();
        }
    }

    function setInviteArea(initVals) {            
        var data_list = initVals;                    
        
        jui.ready(["grid.table"], function (table) {
            table_invite = table("#table_invite", {
                fields: [null, null, "name_val", "email_val", "phone_val", null],
                data: data_list,
                //moveRow: false,	
                //sort: true,
                //resize: true,			
                //editRow: [ 2, 3, 4 ],
                editEvent: false,
                scroll: true,
                scrollHeight: 350,
                editRow: ["name_val","email_val","phone_val"],                
                event: {                         
                    // update: function () {
                    //     console.log("[update] ");        
                    // },
                    // init: function () {
                    //     console.log("[init] ");        
                    // },
                    // append: function () {
                    //     console.log("[append] ");        
                    // },
                    // rowmenu: function () {
                    //     console.log("[rowmenu] ");        
                    // },
                    // select: function(row) {
                    //     console.log("[select] "+ JSON.stringify(row.data));
                    // },
                    // expand: function(row) {
                    //     console.log("[expand] "+ JSON.stringify(row.data));
                    // },
                    // reload: function(row) {
                    //     console.log("[reload] "+ JSON.stringify(row.data));
                    // },
                    editstart: function (row) {
                        console.log("[editstart] " + JSON.stringify(row.data));

                        $("#old_name_val").val(row.data.name_val);
                        $("#old_email_val").val(row.data.email_val);
                        $("#old_phone_val").val(row.data.phone_val);

                        $("#invite_edit_" + row.index).hide();
                        $("#invite_del_" + row.index).hide();
                        $("#invite_update_" + row.index).show();
                    },
                    click: function (row) {
                        console.log("[click] " + JSON.stringify(row.data));
                    },
                    editend: function (row) {
                        console.log("[editend] " + JSON.stringify(row.data));

                        var is_ok = true;

                        //전화 번호 포맷부터 변경    
                        // row.data.phone_val = String(row.data.phone_val).replace(/[^0-9]/g, "")
                        //                                                .replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3")
                        //                                                .replace("--", "-");

                        var __check_data = {
                            name_val: row.data.name_val, //  이렇게 해야 복사가 이루어 진다
                            email_val: String(row.data.email_val).length <= 0 ? LIST_NONE_CHAR : String(row.data.email_val),      // 숫자값 입력하면 숫자로 들어오므로 문자열로 convert 가 필요
                            phone_val: String(row.data.phone_val).length <= 0 ? LIST_NONE_CHAR : String(row.data.phone_val)      // 숫자값 입력하면 숫자로 들어오므로 문자열로 convert 가 필요
                        };

                        var is_edit_name = $("#old_name_val").val() != __check_data.name_val;
                        var is_edit_email = $("#old_email_val").val() != __check_data.email_val;
                        var is_edit_phone = $("#old_phone_val").val() != __check_data.phone_val;

                        console.log("[editend] " + "edit_name: " + is_edit_name + ", edit_email: " + is_edit_email + ", edit_phone: " + is_edit_phone);

                        // 임시 데이터에 복사 -> 이전 데이터로 롤백 -> 임시 복사한 데이터 검사 -> 문제없으면 다시 복사
                        row.data.name_val = $("#old_name_val").val();
                        row.data.email_val = $("#old_email_val").val();
                        row.data.phone_val = $("#old_phone_val").val();

                        print_list_debug("[TempCopy]");

                        var __error_code;    
                        if ((__error_code=check_argument_invite_list(__check_data)) != 0)
                        {
                            if (__error_code == 1 ) {
                                alert("null");
                            } else if (__error_code == 2) {
                                setErrorMessage("error_message", name_check_msg);
                            } else if (__error_code == 3 || __error_code == 6) {
                                setErrorMessage("error_message", email_check_msg);
                            } else if (__error_code == 4) {
                                setErrorMessage("error_message", phone_check_msg);                
                            } else {    // 5
                                setErrorMessage("error_message", invalid_format_check_msg);                                
                            }

                            is_ok = false;
                        }
                        
                        if ((is_ok == true) &&
                            (is_edit_name == true || is_edit_email == true || is_edit_phone == true)) {
                            
                            var error_code;
                            if ((error_code=check_duplicate_invite_list(__check_data, true, is_edit_name, is_edit_email, is_edit_phone)) != 0) { 
                                if(error_code == 1) {
                                    //alert(duplicate_all_msg);
                                    //setErrorMessage("all_duplicate_message", duplicate_all_msg);
                                    setErrorMessage("error_message", duplicate_all_msg);
                                }
                                else if(error_code == 2) {   
                                    //alert(duplicate_email_msg);
                                    //setErrorMessage("email_duplicate_message", duplicate_email_msg);
                                    setErrorMessage("error_message", duplicate_email_msg);
                                }
                                else if(error_code == 3) {   
                                    //alert(duplicate_phone_msg);                                
                                    //setErrorMessage("phone_duplicate_message", duplicate_phone_msg);
                                    setErrorMessage("error_message", duplicate_phone_msg);
                                }
                                
                                is_ok = false;   
                            }   
                        }
                        
                        if (is_ok == true) {
                            row.data.name_val = __check_data.name_val;
                            row.data.email_val = __check_data.email_val;
                            row.data.phone_val = __check_data.phone_val;

                            console.log("[editend] Ok " + JSON.stringify(row.data));
                            this.hideEditRow(row.data);
                        } else {
                            // __check_data.name_val = $("#old_name_val").val();
                            // __check_data.email_val = $("#old_email_val").val();       
                            // __check_data.phone_val = $("#old_phone_val").val();  
                            // row.data.name_val = __check_data.name_val;
                            // row.data.email_val = __check_data.email_val;       
                            // row.data.phone_val = __check_data.phone_val;

                            console.log("[editend] false " + JSON.stringify(row.data));
                            this.hideEditRow(row.data);
                        }
                        
                        $("#invite_update_" + row.index).hide();
                        $("#invite_edit_" + row.index).show();
                        $("#invite_del_" + row.index).show();

                        return is_ok;                        
                    }                    
                },
                tpl: {
                    row: $("#tpl_table").html()
                },
            });

            table_invite.updateRow = function (index) {                
                //console.log(`[table_invite.updateRow] index:${index}`)
                //var invite_val = $("#table_invite").find('input.edit').val();
                // $("#table_invite").find('input.edit').each( function (index) {
                // 	console.log("8888888" + $(this).val() );	
                // } );

                var name_val = $("#table_invite").find('input.edit').eq(0).val();
                var email_val = $("#table_invite").find('input.edit').eq(1).val();
                var phone_val = $("#table_invite").find('input.edit').eq(2).val();
                // var val1__ = $("#table_invite").find('input.edit').index(0).val();
                // var val2__ = $("#table_invite").find('input.edit').index(1).val();
                // var val3__ = $("#table_invite").find('input.edit').index(2).val();
                
                var __push_data = {
                    name_val: name_val, 
                    email_val: String(email_val).length <= 0 ? LIST_NONE_CHAR : String(email_val),      // 숫자값 입력하면 숫자로 들어오므로 문자열로 convert 가 필요
                    phone_val: String(phone_val).length <= 0 ? LIST_NONE_CHAR : String(phone_val)       // 숫자값 입력하면 숫자로 들어오므로 문자열로 convert 가 필요
                }                

                var is_ok = true;

                //전화 번호 포맷부터 변경    
                // __push_data.phone_val = String(__push_data.phone_val).replace(/[^0-9]/g, "")
                //                                                      .replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3")
                //                                                      .replace("--", "-");

                var is_edit_name = $("#old_name_val").val() != __push_data.name_val;
                var is_edit_email = $("#old_email_val").val() != __push_data.email_val;
                var is_edit_phone = $("#old_phone_val").val() != __push_data.phone_val;

                console.log(`[table_invite.updateRow] index:${index}, old_name_val:${$("#old_name_val").val()}, old_email_val:${$("#old_email_val").val()}, old_phone_val:${$("#old_phone_val").val()}`)
                console.log(`[table_invite.updateRow] index:${index}, is_edit_name:${is_edit_name}, is_edit_email:${is_edit_email}, is_edit_phone:${is_edit_phone}`)

                var __error_code;    
                if ((__error_code=check_argument_invite_list(__push_data)) != 0)
                {
                    if (__error_code == 1 ) {
                        alert("null");
                    } else if (__error_code == 2) {
                        setErrorMessage("error_message", name_check_msg);
                    } else if (__error_code == 3 || __error_code == 6) {
                        setErrorMessage("error_message", email_check_msg);                
                    } else if (__error_code == 4) {
                        setErrorMessage("error_message", phone_check_msg);                
                    } else  {  // 5
                        setErrorMessage("error_message", invalid_format_check_msg);                
                    }

                    is_ok = false;
                }

                if ((is_ok == true) &&
                    (is_edit_name == true || is_edit_email == true || is_edit_phone == true)) {                            

                    var error_code;
                    if ((error_code=check_duplicate_invite_list(__push_data, true, is_edit_name, is_edit_email, is_edit_phone)) != 0) {           
                        if(error_code == 1) {
                            //alert(duplicate_all_msg);
                            //setErrorMessage("all_duplicate_message", duplicate_all_msg);
                            setErrorMessage("error_message", duplicate_all_msg);
                        }
                        else if(error_code == 2) {   
                            //alert(duplicate_email_msg);
                            //setErrorMessage("email_duplicate_message", duplicate_email_msg);                            
                            setErrorMessage("error_message", duplicate_email_msg);                            
                        }
                        else {
                            //alert(duplicate_phone_msg);
                            //setErrorMessage("phone_duplicate_message", duplicate_phone_msg);
                            setErrorMessage("error_message", duplicate_phone_msg);
                        }
                                
                        // __push_data.name_val = $("#old_name_val").val();
                        // __push_data.email_val = $("#old_email_val").val();       
                        // __push_data.phone_val = $("#old_phone_val").val();  
                        
                        //print_list_debug();
                                           
                        is_ok = false;   
                    }
                }

                if (is_ok == true) {
                    table_invite.update(index, __push_data);			
                    //table_invite.update(index, {name_val: val1, email_val: val2, phone_val: val3 });			
                    //console.log(`[table_invite.updateRow] index:${index}, invite_val:${invite_val}, invite_val2:${invite_val2}`)
                    //console.log(`[table_invite.updateRow] inputValue1:${inputValue1}, inputValue2:${inputValue2}., selectValuse1:${selectValuse1}, selectValuse2:${selectValuse2}`)
                    console.log(`[table_invite.updateRow] ok index:${index}, data:${JSON.stringify(__push_data)}`)
                } else {
                    __push_data.name_val = $("#old_name_val").val();
                    __push_data.email_val = $("#old_email_val").val();       
                    __push_data.phone_val = $("#old_phone_val").val();  
                    
                    table_invite.update(index, __push_data);			

                    console.log(`[table_invite.updateRow] false index:${index}, data:${JSON.stringify(__push_data)}`)
                }
                
                return true;
            }
        });    
    }
    
    $(document).off("click", "#ex_filename").on("click", "#ex_filename", function (e) {
    //$('#ex_filename').click(function (e) {
        // console.log($(this)[0].files[0])
        // console.log(e.target.files[0])           
        // e.target.files[0] = "";                    
        // $("#ex_filename")[0].value = '';       
        // $('#ex_filename').val(''); 

        console.log("[click] " + $(this)[0].value);   
        
        // 데이터가 있을 경우 확인하고 진행한다
        var invite_list = table_invite.listAll();                   

        if (invite_list.length > 0) {        
            var result = confirm("기존 데이터가 삭제 됩니다. 그래도 진행 하시겠습니까?");
            if (result) {
                $(this)[0].value = '';        
                return true;
            } else {
                return false;
            }
        } else {
            $(this)[0].value = '';    
            return true;
        }
    });

    $('#ex_filename').change(function () {
        //$( '#table_invite').empty();        
        const selectedFile = $(this)[0].files[0];
        //console.log("[change1] " + selectedFile);   

        loadExcelToGrid(selectedFile, table_invite);        
    });

    function loadExcelToGrid(file, invite_list) {        
        const colName = "이름";
        const colEmail = "이메일 주소";
        const colPhone = "휴대폰 번호";            

        //console.log("[change2] ");   
        
        //if (file !== '') {
            // 모든 리스트 삭제
            $("#invite_select_all").trigger("click");
            $("#invite_select_delete").trigger("click");

            var count = 0;
            var reader = new FileReader();
            reader.onload = function (evt) {           
                
                if (evt.target.readyState == FileReader.DONE) {
                    var data = evt.target.result; //해당 데이터, 웹 서버에서 ajax같은거로 가져온 blob 형태의 데이터를 넣어주어도 동작 한다.
                    data = new Uint8Array(data);
                    var workbook = XLSX.read(data, {
                        type: 'array'
                    });                    
                    
                    workbook.SheetNames.forEach(function (item, index, array) {
                        var sheetName = item;
                        
                        excelJson = XLSX.utils.sheet_to_json(workbook.Sheets[item]);                        
                        
                        var errFileFormat = false;                  
                        var errLine = 1;
                        var errCount = 0;;
                        var errCode = 0;
                        var indexKey = [];
                        for (idx in excelJson){
                            var __data = excelJson[idx];

                            // for(var __key in __data) {
                            //     indexKey.push(__key)                         
                            // }
                            // var __name_val  = __data[indexKey[0]];
                            // var __email_val = __data[indexKey[1]];
                            // var __phone_val = __data[indexKey[2]];
                            
                            var __name_val  = __data[colName];
                            var __email_val = __data[colEmail]
                            var __phone_val = __data[colPhone];
                            
                            var __pushData = {
                                name_val: __name_val, 
                                email_val: (__email_val == undefined) ? LIST_NONE_CHAR : __email_val,
                                phone_val: (__phone_val == undefined) ? LIST_NONE_CHAR : String(__phone_val)
                            }       
                            
                            errLine++;
                            
                            if (!check_max_count_invite_list()) {
                                //alert( "입력 갯수를 초과 했습니다")    
                                errCode = 1;
                                console.log("[loadExcelToGrid] Check Max Count !!")
                                break;
                            }

                            // console.log("=== " + JSON.stringify(__data));
                            // console.log("=== " + __data.hasOwnProperty(colName));
                            // console.log("=== " + __data.hasOwnProperty(colEmail));
                            // console.log("=== " + __data.hasOwnProperty(colPhone));

                            //var isFmtCheck = __data.hasOwnProperty(colName) && __data.hasOwnProperty(colEmail) && __data.hasOwnProperty(colPhone);
                            if (!__data.hasOwnProperty(colName) ) {                            
                                // errCode = 2;                            
                                // console.log("[loadExcelToGrid] Line:" + errLine + " Name hasOwnProperty !! -> " + JSON.stringify(__pushData)) 
                                // break; 
                                errCount++;                             
                                console.log("[loadExcelToGrid] Line:" + errLine + " Name hasOwnProperty !! -> " + JSON.stringify(__pushData)) 
                                continue;  
                            }    
                            if (!__data.hasOwnProperty(colEmail) && !__data.hasOwnProperty(colPhone)) {                            
                                // errCode = 3;                            
                                // console.log("[loadExcelToGrid] Line:" + errLine + " Email & Phone hasOwnProperty !! -> " + JSON.stringify(__pushData)) 
                                //break;   
                                errCount++;                             
                                console.log("[loadExcelToGrid] Line:" + errLine + " Email & Phone hasOwnProperty !! -> " + JSON.stringify(__pushData)) 
                                continue;                    
                            }            
                            
                            // var isFmtCheck = __data.hasOwnProperty(colName) && __data.hasOwnProperty(colEmail) && __data.hasOwnProperty(colPhone);
                            // if (!isFmtCheck ) {                            
                            //     errCode = 2;
                            //     console.log("[loadExcelToGrid] hasOwnProperty !!")
                            //     break;                                
                            // }                        
                            // if (!__data.hasOwnProperty(colName) || !__data.hasOwnProperty(colEmail) || !__data.hasOwnProperty(colPhone) ) {
                            //     //errFileFormat = true;
                            //     errCode = 2;
                            //     console.log("[loadExcelToGrid] hasOwnProperty !!")
                            //     break;                                
                            // }

                            //전화 번호 포맷부터 변경    
                            // __pushData.phone_val = String(__pushData.phone_val).replace(/[^0-9]/g, "")
                            //                                                    .replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, "$1-$2-$3")
                            //                                                    .replace("--", "-");

                            var __error_code;    
                            if ((__error_code=check_argument_invite_list(__pushData)) != 0)
                            {
                                if (__error_code == 1 || __error_code == 2) {                                
                                    errCount++;                                
                                    console.log("[loadExcelToGrid] Line:" + errLine + " Invalid Format(NULL, Name) -> " + JSON.stringify(__pushData)) 
                                    continue;                                
                                } else if (__error_code == 3 || __error_code == 6) {
                                    errCount++;                                
                                    console.log("[loadExcelToGrid] Line:" + errLine + " Invalid Email Format -> " + JSON.stringify(__pushData)) 
                                    continue;                                
                                } else if (__error_code == 4) {
                                    errCount++;                                
                                    console.log("[loadExcelToGrid] Line:" + errLine + " Invalid Phone Format -> " + JSON.stringify(__pushData)) 
                                    continue;                                
                                } else {        
                                    errCount++;                                                        
                                    console.log("[loadExcelToGrid] Line:" + errLine + " Invalid Format -> " + JSON.stringify(__pushData)) 
                                    continue;                                
                                } 
                            }
                            
                            var error_code;
                            if ((error_code=check_duplicate_invite_list(__pushData, true, true, true, true)) != 0) {
                                if (error_code == 1) {  
                                    errCount++;                              
                                    //alert( sheetName + "시트의 " + errLine + "라인의 데이터는 중복된 리스트입니다.(이메일 주소, 휴대폰 번호)")    
                                    console.log("[loadExcelToGrid] duplicate all: " + JSON.stringify(__pushData)) 
                                    continue;
                                } else if (error_code == 2) {     
                                    errCount++;                           
                                    //alert( sheetName + "시트의 " + errLine + "라인의 데이터는 중복된 리스트입니다.(이메일 주소)")    
                                    console.log("[loadExcelToGrid] duplicate Email: " + JSON.stringify(__pushData)) 
                                    continue;

                                    // https://nowonbun.tistory.com/615
                                    // $(document.body).append('<div id="dialog-message" style="font-size:15pt;">요청???</div>');
                                    // //$("#dialog-message").text("요청?");
                                    // $('#dialog-message').dialog({
                                    //     modal: true, 
                                    //     title: "경고",
                                    //     //show:"slide", 
                                    //     // 다이얼로그가 show될 때의 액션 설정
                                    //     show: {
                                    //     effect: "blind",
                                    //     duration: 100
                                    //     },
                                    //     // 다이얼로그가 hide될 때의 액션 설정
                                    //     hide: {
                                    //     effect: "explode",
                                    //     duration: 100
                                    //     },
                                    //     buttons: {
                                    //     	"요청하기": function() { $(this).dialog('close'); },
                                    //     	"취소하기": function() { $(this).dialog('close'); },				
                                    //     }
                                    // });                

                                } else {
                                    errCount++;
                                    //alert( sheetName + "시트의 " + errLine + "라인의 데이터는 중복된 리스트입니다.(휴대폰 번호)")    
                                    console.log("[loadExcelToGrid] duplicate Phone: " + JSON.stringify(__pushData)) 
                                    continue;
                                    
                                    // alert( sheetName + "시트의 " + errLine + "라인의 데이터는 중복된 리스트입니다.(휴대폰 번호)")    
                                    // console.log("list duplicate: " + JSON.stringify(__pushData)) 
                                }
                            } else {
                                invite_list.append(__pushData);                                
                                console.log("[loadExcelToGrid] added: " + JSON.stringify(__pushData))                            
                                count++;
                            }
                        };   

                        if (errCode == 1) {
                            //setErrorMessage("error_message", "입력 갯수를 초과 했습니다.");
                           // alert( "입력 갯수를 초과 했습니다.");

                            openPopup('pop_check_alert');
                            $("#alert_text").html("입력 갯수를 초과 했습니다.");

                            //document.getElementById('pop_check_alert').focus();

                            //$("#pop_check_alert").trigger("focusin");
                        } 
                        else if (errCode == 2) {
                            //alert( sheetName + "시트는 데이터는 잘못된 포맷입니다.")    
                            //setErrorMessage("excel_file_message", "선택한 파일의 데이터를 다시 확인해주세요.");
                            setErrorMessage("error_message", "선택한 파일의 데이터를 다시 확인해주세요.");
                        }                     
                        
                        if (errCount > 0) {                        
                            //setErrorMessage("error_message", "중복된 리스트가 포함된 경우 전체 선택 삭제 후 업로드 해주세요.");
                            //alert( "형식이 잘못되거나 중복된" + errCount + "개 데이터를 제외한 "+ count + "개의 데이터가 등록되었습니다." ); 

                            openPopup('pop_check_alert');
                            $("#alert_text").html("형식이 잘못됐거나 중복된" + errCount + "개 데이터를 제외한 "+ count + "개의 데이터가 등록되었습니다.");                        
                        } 
                        
                        console.log("[loadExcelToGrid] ErrorCount: " + errCount);

                        check_count_invite_list();
                    });
                }
            };
            reader.readAsArrayBuffer(file);
            //$("#ex_filename")[0].value = '';
        //}
    }

    // 메시지 글자수 체크
    $(document).on("keyup", "#invite_msg", function () {
        textLenCheck(this, 2000, "#byteInvite_msg");
    });   
    
    // 보내기 버튼(main) -> 보내기
    // $(document).off("click", "#btn_confirm_pop_ok").on("click", "#btn_confirm_pop_ok", function (e) {
    //     closePopup();        
    //     window.location.replace("/");
    // });

    // 보내기 버튼(main)
    $(document).off("click", "#btn_send_main").on("click", "#btn_send_main", function (e) { 
        if ($("#regForm").valid()) {

            var invite_list = table_invite.listAll();
            if( invite_list.length <= 0 ) {
                // openPopup('pop_check_alert');
                // $("#alert_text").html("최소 1개 이상의 리스트를 입력해주세요.");

                // 받는 사람을 등록해주세요
                //setErrorMessage("send_list_value_message", "받는 사람을 등록해주세요");
                setErrorMessage("error_message", "받는 사람을 등록해주세요");

                return false;
            }

            // for (var i = 0; i < invite_list.length; i++) {                
            //     if (invite_list[i].data.name_val == "이동관(메일)") {
            //         invite_list[i].data.name_val = "";
            //     }
            // }
            
            var find_result = invite_list.find( (item, idx) => {
                return (item.data.name_val.length <= 0 ||
                        item.data.email_val.length <= 0 ||
                        item.data.phone_val.length <= 0);
            });

            if (find_result != undefined) {
                setErrorMessage("error_message", "입력 데이터를 다시 확인하세요");

                return false;
            }

            $('html').scrollTop(0);
            openPopup("invite_send_pop");
        }
    });

    // 보내기(main) -> 보내기 -> 실패
    // $(document).off("click", "#pop_close_fail_btn").on("click", "#pop_close_fail_btn", function (e) {
    //     closePopup();        
    // });    

    // 보내기(main) -> 보내기 -> 확인
    $(document).off("click", "#pop_close_btn").on("click", "#pop_close_btn", function (e) {
        closePopup();
        //window.location.replace("/");
        //window.location.reload(true);
        
        $("#refresh_flag").val("1");    // 다른 페이지 갈때 저장 관련 y/n 물어보지 않게

        window.location.replace("/invite/send/list");
    });    

    // 취소 버튼(main)
    $(document).off("click", "#btn_cancel_main").on("click", "#btn_cancel_main", function (e) { 
        $('html').scrollTop(0);
        openPopup("invite_send_cancel_pop");        
    });

    // 취소 버튼(main) -> 취소 버튼
    $(document).off("click", "#btn_send_cancel").on("click", "#btn_send_cancel", function (e) {
        closePopup();        
        //window.location.replace("/");
        $("#refresh_flag").val("1");    // 다른 페이지 갈때 저장 관련 y/n 물어보지 않게

        window.location.reload()
    });
    
    $(document).off("focusout", "#add_invite").on("focusout", "#add_invite", function () {    
         //console.log("add_invite: focusout " );

        //  clearErrorMessage("name_add_value_message")
        //  clearErrorMessage("email_add_value_message")
        //  clearErrorMessage("phone_add_value_message")
        //  clearErrorMessage("all_duplicate_message")
        //  clearErrorMessage("email_duplicate_message")
        //  clearErrorMessage("phone_duplicate_message")        
         clearErrorMessage("error_message")
    });
    
    $(document).off("focusin", "#table_invite").on("focusin", "#table_invite", function () {    
        //console.log("table_invite: focusout " );

        // clearErrorMessage("name_add_value_message")
        // clearErrorMessage("email_add_value_message")
        // clearErrorMessage("phone_add_value_message")
        // clearErrorMessage("all_duplicate_message")
        // clearErrorMessage("email_duplicate_message")
        // clearErrorMessage("phone_duplicate_message")
        clearErrorMessage("error_message") 
    });
    
    $(document).off("focusin", "#ex_filename").on("focusin", "#ex_filename", function () {    
        //console.log("ex_filename: focusin " );
        
        //clearErrorMessage("excel_file_message")
        clearErrorMessage("error_message");
    });

    $(document).off("focusout", "#btn_send_main").on("focusout", "#btn_send_main", function () {    
        //console.log("btn_send_main: focusin " );
        
        //clearErrorMessage("send_list_value_message")
        clearErrorMessage("error_message");
    });

    // 확인창 표시시에 space key 를 치면 화일 오픈 박스 막기 위해
    $( "#ex_filename" ).keydown(function() {
        // alert( "Handler for .keydown() called." );
        return false;
    });
    
    $(document).off("click", "#btn_send_confirm").on("click", "#btn_send_confirm", function (e) {
        if ($("#regForm").valid()) {

            var invite_list = table_invite.listAll();
            if (invite_list.length <= 0) {
                //openPopup('pop_check_alert');
                //$("#alert_text").html("최소 1개 이상의 리스트를 입력해주세요.");

                // 받는 사람을 등록해주세요
                //setErrorMessage("send_list_value_message", "받는 사람을 등록해주세요");
                setErrorMessage("error_message", "받는 사람을 등록해주세요");

                return false;
            }

            // for (var i = 0; i < invite_list.length; i++) {                
            //     if (invite_list[i].data.name_val == "이동관(메일)") {
            //         invite_list[i].data.name_val = "";
            //     }
            // }
            
            var find_result = invite_list.find( (item, idx) => {
                return (item.data.name_val.length <= 0 ||
                        item.data.email_val.length <= 0 ||
                        item.data.phone_val.length <= 0);
            });

            if (find_result != undefined) {
                setErrorMessage("error_message", "입력 데이터를 다시 확인하세요");

                return false;
            }

            closePopup();

            var param = [];
            for (var i = 0; i < invite_list.length; i++) {                
                //invite_list_arr += invite_list[i].data.name_val + "," + invite_list[i].data.email_val + "," + invite_list[i].data.phone_val + ",";
                               
                var __data = {
                    name: invite_list[i].data.name_val.replace(/,/gi, "，").replace(/'/gi, "`"),
                    email: invite_list[i].data.email_val,
                    phone: invite_list[i].data.phone_val
                }

                param.push(__data);
            }
            console.log(param)

            var recrut_sn = $("select[id=recuit_select_list] option:selected").val();             

            var send_title = $("#invite_title").val().replace(/'/gi, "`"); 
            var send_message = $("#invite_msg").val().replace(/'/gi, "`"); 

            /* recrut_sn,  send_message 체크 !!!!!!!!!!!!! */
            // $(function(){
            //     var lines = [];
            //     $.each($('#data').val().split(/\n/), function(i, line){
            //         if(line){
            //             lines.push(line);
            //         }
            //     });
            //     console.log(lines);
            // });

            // 입력 메세지 배열로...
            // var lines = [];
            // $.each($('#invite_msg').val().split(/\n/), function(i, line){
            //     if (line) {
            //       lines.push(line);
            //     }
            // });
            
            console.log(send_message);
            
            $.ajax({
                type: "POST",
                url: "/invite/send",
                data: {
                    recruit_sn: recrut_sn,
                    send_list: JSON.stringify(param),
                    send_title : send_title,
                    send_msg : send_message
                    //send_msg : lines.join("\\n")
                },
                dataType: "json",
                success: function (args) {
                    //console.log(args);

                    var rtnCd = args.RtnCd
                    var rtnMsg = args.RtnMsg

                    if (rtnCd == 1) {
                        openPopup('pop_complete_alert');                        
                        // window.location.replace("/");
                        // window.location.href = "/recruit/post/detail?recrut_sn=" + recrut_sn;
                    } else if(rtnCd == "99") {
                        // openPopup('pop_send_fail_alert');
                        // $("#alert_text").html("초대 메시지 전송 요청이 실패했습니다.(재접속 필요)");
                        //alert("초대 메시지 전송 요청이 실패했습니다.(재접속 필요)");

                        //window.location.replace(rtnMsg);
                        window.location.href = rtnMsg;

                        console.log("접속 종료: " + rtnMsg);
                    } else {
                            openPopup('pop_send_fail_alert');
                            $("#fail_alert_text").html("초대 메시지 전송 요청이 실패했습니다. (" + rtnMsg + ")");

                            console.log("등록 실패 : " + rtnMsg);
                            //$(".loading").attr("style", "display:none");
                        }
                },
                error: function (e) {
                    alert("fail " + e.responseText);
                }
            });
        }
    });    

    $(document).off("click", "#invite_send_test").on("click", "#invite_send_test", function (e) {
        if ($("#regForm").valid()) {

            clearErrorMessage("test_error_message");

            var name_add_value = $("#name_add_value_test").val();
            var email_add_value = $("#email_add_value_test").val();
            var phone_add_value = $("#phone_add_value_test").val();            
       
            console.log(`[invite_send_test] name_add_value:${name_add_value}, email_add_value:${email_add_value}, phone_add_value:${phone_add_value}`);

            var __push_data = {
                name_val: name_add_value, 
                email_val: email_add_value.length <= 0 ? LIST_NONE_CHAR : email_add_value,
                phone_val: phone_add_value.length <= 0 ? LIST_NONE_CHAR : phone_add_value
            };        
        
            var __error_code;    
            if ((__error_code=check_argument_invite_list(__push_data)) != 0)
            {
                if (__error_code == 1) { 
                    alert("null");                
                } else if (__error_code == 2) {                
                    setErrorMessage("test_error_message", name_check_msg);
                } else if (__error_code == 3|| __error_code == 6) {
                    setErrorMessage("test_error_message", email_check_msg);
                } else if (__error_code == 4) {
                    setErrorMessage("test_error_message", phone_check_msg);                
                } else {    // 5
                    setErrorMessage("test_error_message", invalid_format_check_msg);                                
                }
                
                return false;         
            }
        
            // 한명만 보내므로 중복 체크 필요없고 check_duplicate_invite_list() 실제리스트랑 비교하므로 사용안됨
            // var error_code;
            // if ((error_code=check_duplicate_invite_list(__push_data, true, true, true,true)) != 0) {
            //     if (error_code == 1) {
            //         setErrorMessage("test_error_message", duplicate_all_msg);
            //     }
            //     else if (error_code == 2) {   
            //         setErrorMessage("test_error_message", duplicate_email_msg);
            //     }
            //     else {
            //         setErrorMessage("test_error_message", duplicate_phone_msg);
            //     }

            //     return false;
            // }  

            if (__push_data.name_val.length <= 0 || __push_data.email_val.length <= 0 || __push_data.phone_val.length <= 0 ) {                                    
                setErrorMessage("test_error_message", "입력 데이터를 다시 확인하세요");

                return false;
            }
            
            var recrut_sn = $("select[id=recuit_select_list] option:selected").val();             

            var send_title = $("#invite_title").val().replace(/'/gi, "`"); 
            var send_message = $("#invite_msg").val().replace(/'/gi, "`");             
           
            console.log(send_message);

            var param = [];
            
            param.push({name: __push_data.name_val, email: __push_data.email_val, phone: __push_data.phone_val});

            console.log(param)
            
            $.ajax({
                type: "POST",
                url: "/invite/send",
                data: {
                    recruit_sn: recrut_sn,
                    send_list: JSON.stringify(param),
                    send_title : send_title,
                    send_msg : send_message,
                    is_test: "true"                 
                },
                dataType: "json",
                success: function (args) {
                    //console.log(args);

                    var rtnCd = args.RtnCd
                    var rtnMsg = args.RtnMsg

                    if (rtnCd == 1) {                        
                        openPopup('pop_check_alert');
                        $("#alert_text").html("테스트 초대 메시지 전송 요청이 완료되었습니다.");
                    } else if(rtnCd == "99") {
                        window.location.href = rtnMsg;

                        console.log("접속 종료: " + rtnMsg);
                    } else {
                        openPopup('pop_send_fail_alert');
                        $("#fail_alert_text").html("테스트 초대 메시지 전송 요청이 실패했습니다. (" + rtnMsg + ")");
                    }
                },
                error: function (e) {
                    alert("fail " + e.responseText);
                }
            });
        }
    });    
</script>
{{end}} 