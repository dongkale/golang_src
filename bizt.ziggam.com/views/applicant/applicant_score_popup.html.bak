{{template "include/popup_base.html" .}}

<style type="text/css">
.popLayer.size03 {position:inherit;width:1000px;overflow: auto;}
.content {padding:55px 34px 65px}

.popCont .profile span.img img{width:90px;height:90px;display:inline-block;border-radius:50%;overflow:hidden;}
.popCont .profile span.name {padding-top:20px;line-height:15px;font-size:18px;font-weight:bold;display: block;}
.popCont .profile span.state {padding-top:7px;color:#878d91;display: block;}
.popCont .profile span.mail {padding-top:20px;line-height:20px}
.popCont .profile span.mail em {display:inline-block;width:16px;height:12px;background:url(../images/ic-line-mail.png) no-repeat left top;margin-right:4px;vertical-align:middle}
.popCont .profile span.phone {padding-top:6px;line-height:20px}
.popCont .profile span.phone em {display:inline-block;width:16px;height:16px;background:url(../images/ic-line-phonenumber.png) no-repeat left top;margin-right:4px;vertical-align:middle}

.popCont .applyInfo span.state {padding-top:10px;color:#878d91;display: block;text-align: left;}

.popCont table {width:100%;border: 1px solid #ced3d6;border-radius:3px;border-spacing: 0px;border-collapse: inherit}
/*.popCont table {width:100%;border: 1px solid #ced3d6;border-radius:4px;border-spacing: 0px;}*/
.popCont table th {text-align:left;line-height:54px;vertical-align:top;font-weight:bold;padding-top:20px}
.popCont table th.st02 {padding-top:36px;line-height:22px}
/*.popCont table td {position:relative;padding:13px;border-bottom: 1px solid #eaeeef;border: 1px solid #ced3d6;}*/
.popCont table td {position:relative;padding:13px;border-bottom: 1px solid #eaeeef;}
.popCont table td.radioForm .custom-radio:first-child label {margin-left:0}
.popCont table td.radioForm label {margin-left:30px}
.popCont table td.radioForm input.it {width:55px;padding:0 10px;margin-left:5px}
.popCont table td textarea.textarea {padding:13px 100px 13px 24px;line-height:22px;box-sizing:border-box;height:260px;border-radius:4px; border:1px solid #ced3d6;resize:none;width:100%}
.popCont table td textarea.textarea.st02 {height:200px}
/*.popCont table tr:last-child td:first-child {border-bottom-left-radius: 10px;}*/
/*.popCont table tr:last-child td:last-child {border-bottom-right-radius: 10px;}*/
.popCont p.title{line-height:30px;font-weight:bold;color:#878d91;text-align: left;border-bottom: none;margin-top:20px;margin-bottom:5px;font-size:17px;}

.popCont table tr.total_sum td{border-bottom: none;}

.popCont table tr.title{background:#e5e8ee}
.popCont table tr td.category{vertical-align: middle;background:#f8fafb;}
.popCont table tr td.sum{vertical-align: middle;background:#f8fafb;}

.popCont table tbody tr:first-child td:first-child {border-radius: 3px 0 0 0;}
.popCont table tbody tr:first-child td:last-child {border-radius: 0 3px 0 0;}

.popCont .applyInfo {margin-top:25px}
.popCont .applyInfo dl:after {content:'';clear:both;display:block}
.popCont .applyInfo dl dt {float:left;width:70px;line-height:34px;position:relative;text-align: left;padding-left: 15px;}
.popCont .applyInfo dl dt:after {content:'';display:inline-block;width:3px;height:3px;border-radius:50%;overflow:hidden;background:#171717;position:absolute;left:5px;top:16px}
.popCont .applyInfo dl dd {float:left;line-height:34px; max-width:830px}
.popCont .applyInfo dl dd p {line-height:34px;font-size:13px;word-break:break-all}

</style>

{{define "body"}}

<input type="hidden" id="save_opt" value=0>
<input type="hidden" id="close_flag" value=0>

<div class="content">       
    <!--<form id="regForm" name="regForm" method="post">-->
    <div class="popLayer size03">
        <div class="popCont"> 
            <div class="profile">
                <span class="img"><img src="{{.PtoPath}}" onerror="this.src='/static/images/img-profile-empty-02.png'" width="90" height="90" alt=""></span>  
                <span class="name">{{.Nm}}</span>     
                <span class="state">({{.Sex}}・{{.Age}}세)</span>
            </div>    
            <br/>
            <hr/>        
            <div class="applyInfo">
                <P class="title">지원 정보</P>
                <dl>
                    <dt>지원 공고:</dt>
                    <dd>{{.RecrutTitle}}</dd>                    
                </dl>
                <dl>
                    <dt>지원 분야:</dt>
                    <dd>{{.UpJobGrp}} &gt; {{.JobGrp}}</dd>
                </dl>
                <dl>
                    <dt>지원:</dt>
                    <dd>{{.ApplyDt}}</dd>
                </dl>
                <!--
                <span class="state">지원공고: <em>{{.RecrutTitle}}</em></span> 
                <span class="state">지원분야: <em>{{.UpJobGrp}} &gt; {{.JobGrp}}</em></span> 
                <span class="state">지원일: <em>{{.ApplyDt}}</em></span> 
                -->
            </div>
            <P class="title">종합 점수</P>
            <table id="eval_table">
                <colgroup>
                    <col width="150px">
                    <col width="235px">
                    <col width="85px">
                    <col width="85px">
                    <col width="85px">
                    <col width="85px">
                    <col width="85px">
                    <col width="100px">                                               
                </colgroup>                       
                <!--http://localhost:7070/applicant/score/popup?recrut_sn=2021012421&pp_mem_no=P2019012500137-->
                <!--https://coding-factory.tistory.com/184-->                                    
            </table>             
            <div class="field st02">
                <P class="title">종합평가 및 피드백</p>    
                <dl>
                    <!--<dt>종합평가 및 피드백</dt>-->
                    <dd>
                        <div class="tArea">
                            <textarea name="result_comment" id="result_comment" cols="30" rows="10" maxlength="2000" class="it"
                                      placeholder="종합 평가를 입력하세요.">{{str2html .ResultComment}}</textarea>
                            <!-- 글자수가 입력되지 않았을때 class 없음 -->
                            <span class="text"><em id="byteResultComment">2000</em>/2000자</span>
                        </div>
                        <p class="validationAlert result_comment_message"></p>
                    </dd>
                </dl>
            </div>
        </div>
        <div class="btnSet">            
            <a href="#" class="btn normal" onclick="window.close();">취소</a>
            <a href="javascript:void(0);" class="btn type_blue st02 normal" id="btn_save">저장</a>
            <a href="javascript:void(0);" class="btn type_blue st02 normal" id="btn_save_close">저장 후 닫기</a>
        </div>
    </div>
    <!--</form>--> 
</div>    

<div class="popupWrap common_alert" id="pop_common_alert">
    <div class="popLayer">
        <div class="popCont">
            <p class="text alert" id="alert_text"></p>
        </div>
        <div class="btnSet">            
            <a href="javascript:void(0);" class="btn" onclick="closePopup()">확인</a>
        </div>
    </div>
    <span class="cover"></span>
</div>

<div class="popupWrap" id="pop_save_yn">
	<div class="popLayer">
		<div class="popCont">
			<p class="text">입력된 정보를 정말로 저장 하시겠습니까?</p>			
		</div>
		<div class="btnSet">
			<a href="javascript:void(0);" class="btn" onclick="closePopup()">아니오</a>
			<a href="javascript:void(0);" class="btn type_red" id="btn_save_confirm">예</a>
		</div>
	</div>
	<span class="cover"></span>
</div>  		

<script type="text/javascript">
    
    // grade 0 은 초기값, 내용 추가시 colgroup 조정
    var EvalItemGradeTbl = [
                                {"grade":1, "value":10, "title":"탁월"},
                                {"grade":2, "value":8, "title":"우수"},
                                {"grade":3, "value":6, "title":"보통"},
                                {"grade":4, "value":4, "title":"미흡"},
                                {"grade":5, "value":2, "title":"기준미달"},
                           ];
    var EvalItemCategoryTbl = [ 
                                {"category":1, "title":"자세 및 태도"},
                                {"category":2, "title":"조직 적합성"},
                                {"category":3, "title":"직무 역량"},                            
                              ];
    var EvalItemTbl = [
                        {"num":1, "category":1, "title":"복장 및 면접 자세"},
                        {"num":2, "category":1, "title":"자신감 있는 태도" },
                        {"num":3, "category":2, "title":"적극성 및 진취성" },
                        {"num":4, "category":2, "title":"조직 적응력"},
                        {"num":5, "category":2, "title":"의사 소통 역량"},
                        {"num":6, "category":2, "title":"리더십 및 팀워크" },
                        {"num":7, "category":3, "title":"기업 및 직무에 대한 이해도"},
                        {"num":8, "category":3, "title":"직무 경험"},
                        {"num":9, "category":3, "title":"발전 가능성"},                        
                      ];
    
    //var UpdateCallback = null;  // function() {};

    var IsSave = false;
    
    $(document).ready(function () {            
        $('input.custom').customInput();       
        
        $("#result_comment").keyup();        
        
        // id 생성
        // for (val in EvalItemTbl) {    
        //     EvalItemTbl[val].id = `eval_item${EvalItemTbl[val].num}`;
        // }

        // console.log(`====== ${JSON.stringify("{{.EvalItemGradeTbl__}}")}`)
        // console.log(`====== ${JSON.stringify("{{.EvalItemCategoryTbl__}}")}`)
        // console.log(`====== ${JSON.stringify("{{.EvalItemTbl__}}")}`)

        // var evalItemGradeTbl__ = JSON.parse("{{.EvalItemGradeTbl__}}"); 
        // for (idx in evalItemGradeTbl__){        
        //     console.log(__temp[idx]);            
        // }; 

        // var evalItemGradeTbl__ = JSON.parse("{{.EvalItemGradeTbl__}}");	
        // console.log(evalItemGradeTbl__);

        // var EvalItemCategoryTbl__ = JSON.parse("{{.EvalItemCategoryTbl__}}");	
        // console.log(EvalItemCategoryTbl__);

        // var EvalItemTbl__ = JSON.parse("{{.EvalItemTbl__}}");	
        // console.log(EvalItemTbl__);   

        create_eval_item();
        
        create_eval_item_event();        
        
        //var eval_item_list = {{.EvalItemListOld}};
        var evalItemList = JSON.parse("{{.EvalItemList}}");	

        console.log(`evalItemList: ${JSON.stringify(evalItemList)}`);

        for (idx in evalItemList){        
             set_eval_item(idx, evalItemList[idx]);     
        };    

        // set_eval_item(1, 1);
        // set_eval_item(2, 2);
        // set_eval_item(3, 3);
        // set_eval_item(4, 4);
        // set_eval_item(5, 5);
        // set_eval_item(6, 4);
        // set_eval_item(7, 3);
        // set_eval_item(8, 2);
        // set_eval_item(9, 1);

        sum_eval_item();


        // 팝업 창 크기를 HTML 크기에 맞추어 자동으로 크기를 조정하는 함수.
        // var strWidth;
        // var strHeight;

        // //innerWidth / innerHeight / outerWidth / outerHeight 지원 브라우저 
        // if ( window.innerWidth && window.innerHeight && window.outerWidth && window.outerHeight ) {
        //     strWidth = $('.userInfoPop').outerWidth() + (window.outerWidth - window.innerWidth);
        //     strHeight = $('.userInfoPop').outerHeight() + (window.outerHeight - window.innerHeight);
        // }
        // else {
        //     var strDocumentWidth = $(document).outerWidth();
        //     var strDocumentHeight = $(document).outerHeight();

        //     window.resizeTo ( strDocumentWidth, strDocumentHeight );

        //     var strMenuWidth = strDocumentWidth - $(window).width();
        //     var strMenuHeight = strDocumentHeight - $(window).height();

        //     strWidth = $('.userInfoPop').outerWidth() + strMenuWidth;
        //     strHeight = $('.userInfoPop').outerHeight() + strMenuHeight;
        // }

        // //resize 
        // window.resizeTo( strWidth, strHeight );
        //window.moveTo(0,0)
    });    
    
    // 코멘트 글자 체크
    $(document).on("keyup", "#result_comment", function () {
        textLenCheck(this, 2000, "#byteResultComment");
    });

    function get_eval_item_id(num) {
        return `eval_item${num}`;
    }

    function create_eval_item() {   

        // 등급
        //<tr id="eval_item_grade" align="center" class="title">
        // $("#eval_table").append(`<tr id="eval_item_grade" align="center" class="title">`);
        // $("#eval_table").append(`</tr>`);        

        // $(`#eval_item_grade`).append(`<td></td>`);      // 타이틀은 컬럼 2개
        // $(`#eval_item_grade`).append(`<td></td>`);  
        
        // for (idx in EvalItemGradeTbl){              
        //     $(`#eval_item_grade`).append(`<td><p>${EvalItemGradeTbl[idx].title}</p><p>(${EvalItemGradeTbl[idx].value}점)</p></td>`);                                    
        // };
        // $(`#eval_item_grade`).append(`<td style="vertical-align: middle;"><p>비고</p></td>`);               

        var html = "";

        html += `<tr id="eval_item_grade" align="center" class="title">`;
        html += `<td></td>`;
        html += `<td></td>`;

        for (idx in EvalItemGradeTbl){              
            html += `<td><p>${EvalItemGradeTbl[idx].title}</p><p>(${EvalItemGradeTbl[idx].value}점)</p></td>`;                                    
        };

        html += `<td style="vertical-align: middle;"><p>비고</p></td>`;

        $(`#eval_table`).append(html);  
        
        // 문항
        html = "";
        var category_f = 0;
        for (val in EvalItemTbl) {    
            
            if (EvalItemTbl[val].category != category_f) {
                var __category = EvalItemTbl[val].category;

                var __cnt = EvalItemTbl.filter(x => x.category === __category).length + 1;
                var __tit = EvalItemCategoryTbl.find(x => x.category === __category).title;                

                //$("#eval_table").append(`<tr><td rowspan="${__cnt}" align="center" class="category">${__tit}</td></tr>`);  
                html += `<tr><td rowspan="${__cnt}" align="center" class="category">${__tit}</td></tr>`;

                category_f = EvalItemTbl[val].category;
            }                     
            
            //$("#eval_table").append(`<tr id="${EvalItemTbl[val].id}"><td align="left">${EvalItemTbl[val].title}</td></tr>`);  
            //html += `<tr id="${EvalItemTbl[val].id}"><td align="left">${EvalItemTbl[val].title}</td></tr>`;                    
            html += `<tr id="${get_eval_item_id(EvalItemTbl[val].num)}"><td align="left">${EvalItemTbl[val].title}</td></tr>`;                                

            //console.log(get_eval_item_id(EvalItemTbl[val].num));
        }  

        $(`#eval_table`).append(html);  
        
        // 종합 점수
        html = "";
        //$("#eval_table").append(`<tr id="total_sum" class="total_sum"><td colspan="2" align="center" class="sum">합계</td></tr>`); 
        html += `<tr id="total_sum" class="total_sum"><td colspan="2" align="center" class="sum">합계</td></tr>`;
        $(`#eval_table`).append(html);          

        // 문항 수치 셋(라디오 버튼) 
        for (idx in EvalItemGradeTbl){            
            for (val in EvalItemTbl) {                                
                $(`#${get_eval_item_id(EvalItemTbl[val].num)}`).append(`<td><label><input type="radio" name="${get_eval_item_id(EvalItemTbl[val].num)}" value="${EvalItemGradeTbl[idx].value}" data-grade="${EvalItemGradeTbl[idx].grade}"></label></td>`);                        
            }            
            
            $("#total_sum").append(`<td id="sum_${EvalItemGradeTbl[idx].grade}"></td>`);             
        };

        // 종합 점수
        $("#total_sum").append(`<td id="sum_total"></td>`);

        // 비고, 위치 이동 말것 !!
        for (val in EvalItemTbl) { 
            $(`#${get_eval_item_id(EvalItemTbl[val].num)}`).append(`<td>-</td>`);       
        }        
    }
    
    function get_eval_item(eval_item_num) {    

        //eval_item${eval_item_num}
        //${get_eval_item_id(eval_item_num)}
        
        var value = $(`input[name="${get_eval_item_id(eval_item_num)}"]:checked`).val();
        var grade = $(`input[name="${get_eval_item_id(eval_item_num)}"]:checked`).data("grade");
        
        value = (value == undefined) ? 0 : value;            
        grade = (grade == undefined) ? 0 : grade;
            
        return {grade: parseInt(grade), value: parseInt(value)};
    };    

    function set_eval_item(eval_item_num, grade) {    
        
        //console.log(`============================ ${eval_item_num}, ${num}`);

        $(`input[name="${get_eval_item_id(eval_item_num)}"]`).each(function (e) {    
            
            if ($(this).data('grade') == grade) {
                $(this).attr("checked", true);

                // 마지막에 체크되고 계산이 안되는 버그(?)가 있음..!!
                // 그냥 체크만 하고 계산 루틴 돌리는 걸로
                //$(this).click();            
                //console.log(`eval_item_num:${eval_item_num}, value:${$(this).val()}, num:${$(this).data('num')}`);
            }
            //console.log(`eval_item_num:${eval_item_num}, value:${$(this).val()}, grade:${$(this).data('grade')}`);
        });        
    };    

    function sum_eval_item() {        
        
        var sum_total = 0;
        
        for (idx in EvalItemGradeTbl) {

            var __sum = 0;
            
            for (val in EvalItemTbl) { 

                //console.log(`============================ ${JSON.stringify(EvalItemTbl[val])}`);

                var __val = get_eval_item(EvalItemTbl[val].num);
                if (__val.grade == EvalItemGradeTbl[idx].grade) {
                    __sum += __val.value;
                    // console.log(`============================ ${JSON.stringify(__val)}`);
                    // console.log(`============================ ${JSON.stringify(EvalItemTbl[val])}`);
                }                
            }            
            
            $(`#sum_${EvalItemGradeTbl[idx].grade}`).html(__sum);    

            sum_total += __sum;
        }        

        $(`#sum_total`).html(sum_total);    
        
        //console.log(sum_total);        

        return sum_total
    }

    function create_eval_item_event() {

        for (val in EvalItemTbl) {                
            
            $(document).off("click", `input:radio[name="${get_eval_item_id(EvalItemTbl[val].num)}"]`).on("click", `input:radio[name="${get_eval_item_id(EvalItemTbl[val].num)}"]`, function (e) {        

                $("#close_flag").val(0);    // 다른 페이지 갈때 저장 관련 y/n 물어보지 않게
                
                sum_eval_item();
            });
        } 
    }

    $(document).off("click", "#btn_save").on("click", "#btn_save", function (e) {      
        
        // var evalItemString = []

        // for (val in EvalItemTbl) { 
        //     var __result = get_eval_item(EvalItemTbl[val].num);

        //     if (__result) {
        //         evalItemString.push(`${EvalItemTbl[val].num}:${__result.grade}`);
        //     }

        //     console.log(`num:${EvalItemTbl[val].num}, check:${JSON.stringify(__result)}`);
        // }

        // console.log(evalItemString.join(","));

        $("#save_opt").val(0);

        openPopup('pop_save_yn');

        // var check1 = get_eval_item(1);
        // var check2 = get_eval_item(2);
        // var check3 = get_eval_item(3);
        // var check4 = get_eval_item(4);
        // var check5 = get_eval_item(5);
        // var check6 = get_eval_item(6);

        // var check7 = get_eval_item(7);
        // var check8 = get_eval_item(8);
        // var check9 = get_eval_item(9);

        // console.log(`check1:${JSON.stringify(check1)}`);
        // console.log(`check2:${JSON.stringify(check2)}`);
        // console.log(`check3:${JSON.stringify(check3)}`);
        // console.log(`check4:${JSON.stringify(check4)}`);
        // console.log(`check5:${JSON.stringify(check5)}`);
        // console.log(`check6:${JSON.stringify(check6)}`);

        // console.log(`check7:${JSON.stringify(check7)}`);
        // console.log(`check8:${JSON.stringify(check8)}`);
        // console.log(`check9:${JSON.stringify(check9)}`);

        // console.log(`sum_eval_item:${sum_eval_item()}`);

        // console.log(`${1}:${check1.grade}`);
        // console.log(`${2}:${check2.grade}`);
        
    });

    $(document).off("click", "#btn_save_close").on("click", "#btn_save_close", function (e) {                    
        
        openPopup('pop_save_yn');
    });

    $(document).off("click", "#btn_save_confirm").on("click", "#btn_save_confirm", function (e) {      

        closePopup('pop_save_yn');

        $("#close_flag").val(1);    // 저장이 이루어 지면 창닫기에 물어보지 않는다

        var save_opt = $("#save_opt").val() == 0 ? false : true;
        
        var evalItemString = []

        for (val in EvalItemTbl) { 
            var __result = get_eval_item(EvalItemTbl[val].num);

            if (__result) {
                evalItemString.push(`${EvalItemTbl[val].num}:${__result.grade}`);
            }

            //console.log(`num:${EvalItemTbl[val].num}, check:${JSON.stringify(__result)}`);
        }

        console.log("evalItemString : " + evalItemString.join(",")); 

        ajaxScoreSave(save_opt, evalItemString);
    });    

    var ajaxScoreSave = function (flag, evalItemString) {

        var recrut_sn = "{{.RecrutSn}}";
		var pp_mem_no = "{{.PpMemNo}}";
        var eval_item = evalItemString.join(",");     
        var result_value = sum_eval_item();
        var result_comment= $("#result_comment").val().replace(/'/gi,"`");

        console.log("recrut_sn : " + recrut_sn);
        console.log("pp_mem_no : " + pp_mem_no);
        console.log("eval_item : " + eval_item);
        console.log("result_value : " + result_value);
        console.log("result_comment : " + result_comment);        
        
        var formData = new FormData();
        formData.append("recrut_sn", recrut_sn);
        formData.append("pp_mem_no", pp_mem_no);
        formData.append("eval_item", eval_item);
        formData.append("result_value", result_value);
        formData.append("result_comment", result_comment);                  
        
        $.ajax({
            cache: false,
            url: '/applicant/score/reg/update',
            data: formData,
            type: 'POST',
            processData: false,
            contentType: false,
            dataType: "json",
            error: function (e) {
                console.log("error : " + e);
            },
            success: function (rep) {
                var rtnCd = rep.RtnCd
                var rtnMsg = rep.RtnMsg
                if (rtnCd == 1){
                    //console.log(window.opener)
                    //ajaxToServerFileLog("Info",`[ajaxScoreSave] >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>${window.opener}`)
                    if (window && window.opener && isFunction(window.opener.ajaxApplicantList)) {                        
                        window.opener.ajaxApplicantList();
                        //window.opener.$("#btn_search").trigger('click');
                        ajaxToServerFileLog("Info",`[ajaxScoreSave] Call ${"ScoreUpdateCallback"}`)
                    } else {                        
                        ajaxToServerFileLog("Info",`[ajaxScoreSave] Null ${"ScoreUpdateCallback"}`)
                    }

                    // window.parent.parent.ajaxApplicantList();
                    // console.log(window.parent.parent);

                    
                    
                    // if (window.UpdateCallback && isFunction(window.UpdateCallback)) {                        
                    //     ajaxToServerFileLog("Info",`[ajaxScoreSave] Call ${"UpdateCallback"}`)
                    //     window.UpdateCallback();
                    // } else {                        
                    //     ajaxToServerFileLog("Info",`[ajaxScoreSave] Null ${"UpdateCallback"}`)
                    // }

                    
                    // var updateCallback = sessionStorage.getItem(`ScoreUpdateCallback`);                    
                    // //console.log(updateCallback);

                    // // updateCallback();

                    //var __f__ = Function('return ' + updateCallback);
                    // var new_fn = new Function("return " + updateCallback)()
                    // new_fn();                                        

                    // opener.location.reload(); 하면 
                    // if (isFunction(callback)) {
                    //     callback();                    
                    // }

                    //ajaxToServerFileLog("Info",`[2] =============================== ${__UpdateCallback}`)

                    // window.on.onload = function(){   
                    //     this.UpdateCallback = __UpdateCallback;   
                    //     ajaxToServerFileLog("Info", `[3]=============================== ${__UpdateCallback} `);                     
                    // };

                    // $(window).unload(function() {
                    //     alert('Handler for .unload() called.');
                    // });

                    if (flag == true) {
                        window.close();
                    } else {
                        window.location.reload();      
                    }

                    // for (var i = 0; i < window.frames.length; i++) {
                    //     console.log(window.frames[i]);
                    // }

                    // console.log(window.parent);
                    // console.log(window.parent.parent);                    
                } else if (rtnCd == 99) {
                    window.location.href = rtnMsg;
                    console.log("message : " + rtnMsg);
                } else {
                    console.log("등록 실패 : " + rtnMsg);
                    //$(".loading").attr("style", "display:none");
                }
            }
        }); 
    }

    window.onbeforeunload = function(event) {
        //event.preventDefault();

        if($("#close_flag").val() == 1)    
            return;        
            
        return true;
    }

    /*
    var ajaxScoreSelect = function (recrut_sn, pp_mem_no) {

        console.log("recrut_sn : " + recrut_sn);
        console.log("pp_mem_no : " + pp_mem_no);
        
        var formData = new FormData();
        formData.append("recrut_sn", recrut_sn);
        formData.append("pp_mem_no", pp_mem_no);
        
        $.ajax({
            cache: false,
            url: '/applicant/score/popup',
            data: formData,
            type: 'POST',
            processData: false,
            contentType: false,
            dataType: "json",
            error: function (e) {
                console.log("error : " + e);
            },
            success: function (rep) {
                var rtnCd = rep.Rtn.RtnCd
                var rtnMsg = rep.Rtn.RtnMsg
                if (rtnCd == 1){
                    console.log(`${JSON.stringify(rep)}`);                    
                } else if (rtnCd == 99) {
                    window.location.href = rtnMsg;
                    console.log("message : " + rtnMsg);
                } else {
                    console.log("등록 실패 : " + rtnMsg);
                    //$(".loading").attr("style", "display:none");
                }
            }
        }); 
    }

    $(document).off("click", "#btn_debug").on("click", "#btn_debug", function (e) {      

        var recrut_sn = "{{.RecrutSn}}";
		var pp_mem_no = "{{.PpMemNo}}";

        ajaxScoreSelect(recrut_sn,pp_mem_no );
    });
    */




    

    //----------------------------------------------------------------------------------------------------------------------

    function create_eval_item_grade_old() {        

        // $(`#eval_item_grade`).append(`<td></td>`);      // 타이틀은 컬럼 2개
        // $(`#eval_item_grade`).append(`<td></td>`);                        

        for (idx in EvalItemGradeTbl){       
            if (EvalItemGradeTbl[idx].visible == true) {       
                $(`#eval_item_grade`).append(`<td><p>${EvalItemGradeTbl[idx].title}</p><p>(${EvalItemGradeTbl[idx].value}점)</p></td>`);                        
            } else {
                $(`#eval_item_grade`).append(`<td></td>`);                        
            }
        };

        $(`#eval_item_grade`).append(`<td style="vertical-align: middle;"><p>비고</p></td>`);                    
        }

    function create_eval_item_old() { 

        for (idx in EvalItemGradeTbl){            
            for (val in EvalItemTbl) {                                
                $(`#${get_eval_item_id(EvalItemTbl[val].num)}`).append(`<td><label><input type="radio" name="${get_eval_item_id(EvalItemTbl[val].num)}" value="${EvalItemGradeTbl[idx].value}" data-grade="${EvalItemGradeTbl[idx].grade}"></label></td>`);                        
            }            
            
            $("#total_sum").append(`<td id="sum_${EvalItemGradeTbl[idx].grade}"></td>`);             
        };

        // 비고
        for (val in EvalItemTbl) { 
            $(`#${get_eval_item_id(EvalItemTbl[val].num)}`).append(`<td></td>`);       
        }

        $("#total_sum").append(`<td id="sum_total"></td>`);
    }


     /*
        var recrut_sn = "{{.RecrutSn}}";
		var pp_mem_no = "{{.PpMemNo}}";
        var eval_item = evalItemString.join(",");     
        var result_value = sum_eval_item();
        var result_comment= $("#result_comment").val().replace(/'/gi,"`");

        console.log("recrut_sn : " + recrut_sn);
        console.log("pp_mem_no : " + pp_mem_no);
        console.log("eval_item : " + eval_item);
        console.log("result_value : " + result_value);
        console.log("result_comment : " + result_comment);        
        
        var formData = new FormData();
        formData.append("recrut_sn", recrut_sn);
        formData.append("pp_mem_no", pp_mem_no);
        formData.append("eval_item", eval_item);
        formData.append("result_value", result_value);
        formData.append("result_comment", result_comment);                  
        
        $.ajax({
            cache: false,
            url: '/applicant/score/reg/update',
            data: formData,
            type: 'POST',
            processData: false,
            contentType: false,
            dataType: "json",
            error: function (e) {
                console.log("error : " + e);                
            },
            success: function (rep) {
                var rtnCd = rep.RtnCd
                var rtnMsg = rep.RtnMsg
                if (rtnCd == 1){
                    window.location.reload();                    
                    
                    if (isFunction(window.opener.ScoreUpdateCallback)) {
                        console.log(`=============================== ${"ScoreUpdateCallback"} Call`)
                        window.opener.ScoreUpdateCallback();                        
                    } else {
                        console.log(`=============================== ${"ScoreUpdateCallback"} == NULL`)
                    }
                    //window.opener.ajaxApplicantList();

                    //opener.location.reload();
                    //window.close();
                    // console.log(`=============================== ${callback}`)

                    // opener.location.reload(); 하면 
                    // if (isFunction(callback)) {
                    //     callback();                    
                    // }

                    //window.location.reload();                    
                } else if (rtnCd == 99) {
                    window.location.href = rtnMsg;
                    console.log("message : " + rtnMsg);
                } else {
                    console.log("등록 실패 : " + rtnMsg);
                    //$(".loading").attr("style", "display:none");
                }
            }
        }); 
        */

    /*
    function create_eval_item_old() {        

        for (idx in EvalItemGradeTbl_old){            
            for (val in EvalItemTbl) {                
                $(`#${EvalItemTbl[val].id}`).append(`<td><label><input type="radio" name="${EvalItemTbl[val].id}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);               
            }            
            
            $("#total_sum").append(`<td id="sum_${idx}"></td>`);                         
        };

        // 비고
        for (val in EvalItemTbl) { 
            $(`#${EvalItemTbl[val].id}`).append(`<td></td>`);       
        }

        $("#total_sum").append(`<td id="sum_total"></td>`);
    }

    function create_eval_item_old() {

        for (idx in EvalItemGradeTbl_old){
            //console.log(`Key:${idx}, Value:${EvalItemGradeTbl_old[idx]}`);          
            $("#eval_item1").append(`<td><label><input type="radio" name="${"eval_item1"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        
            $("#eval_item2").append(`<td><label><input type="radio" name="${"eval_item2"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        
            $("#eval_item3").append(`<td><label><input type="radio" name="${"eval_item3"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        
            $("#eval_item4").append(`<td><label><input type="radio" name="${"eval_item4"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        
            $("#eval_item5").append(`<td><label><input type="radio" name="${"eval_item5"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        
            $("#eval_item6").append(`<td><label><input type="radio" name="${"eval_item6"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        

            $("#eval_item7").append(`<td><label><input type="radio" name="${"eval_item7"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        
            $("#eval_item8").append(`<td><label><input type="radio" name="${"eval_item8"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        
            $("#eval_item9").append(`<td><label><input type="radio" name="${"eval_item9"}" value="${EvalItemGradeTbl_old[idx]}" data-num="${idx}"></label></td>`);        

            $("#total_sum").append(`<td id="sum_${idx}"></td>`);             
        };
        // 비고
        $("#eval_item1").append(`<td></td>`);       
        $("#eval_item2").append(`<td></td>`);       
        $("#eval_item3").append(`<td></td>`);       
        $("#eval_item4").append(`<td></td>`);       
        $("#eval_item5").append(`<td></td>`);       
        $("#eval_item6").append(`<td></td>`);       

        $("#eval_item7").append(`<td></td>`);       
        $("#eval_item8").append(`<td></td>`);       
        $("#eval_item9").append(`<td></td>`);       

        $("#total_sum").append(`<td id="sum_total"></td>`);
    }
    */

    /*
    $(document).off("click", "input:radio[name='eval_item1']").on("click", "input:radio[name='eval_item1']", function (e) {
        //var value = $(":radio[name='eval_item1']:checked").val();
        //console.log(value);        

        var value1 = $(this).val();
        var value2 = $(this).data("num");
        
        // console.log(value1);
        // console.log(value2);

        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item2']").on("click", "input:radio[name='eval_item2']", function (e) {        

        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item3']").on("click", "input:radio[name='eval_item3']", function (e) {       

        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item4']").on("click", "input:radio[name='eval_item4']", function (e) {
    
        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item5']").on("click", "input:radio[name='eval_item5']", function (e) {
    
        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item6']").on("click", "input:radio[name='eval_item6']", function (e) {
    
        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item7']").on("click", "input:radio[name='eval_item7']", function (e) {
    
        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item8']").on("click", "input:radio[name='eval_item8']", function (e) {
        
        sum_eval_item();
    });

    $(document).off("click", "input:radio[name='eval_item9']").on("click", "input:radio[name='eval_item9']", function (e) {
        
        sum_eval_item();
    });
    */    

    function sum_eval_item_old() {        
        
        var sum_total = 0;

        for (idx in EvalItemGradeTbl_old){

            var __sum = 0;
            
            // for (val in EvalItemTbl) { 

            //     //console.log(`============================ ${JSON.stringify(EvalItemTbl[val])}`);

            //     var __val = get_eval_item(EvalItemTbl[val].num);
            //     if (__val.num == idx) {
            //         __sum += __val.value;
            //         // console.log(`============================ ${JSON.stringify(__val)}`);
            //         // console.log(`============================ ${JSON.stringify(EvalItemTbl[val])}`);
            //     }                
            // }            

            var val_1 = get_eval_item(1);
            var val_2 = get_eval_item(2);
            var val_3 = get_eval_item(3);
            var val_4 = get_eval_item(4);
            var val_5 = get_eval_item(5);
            var val_6 = get_eval_item(6);

            var val_7 = get_eval_item(7);
            var val_8 = get_eval_item(8);
            var val_9 = get_eval_item(9);

            if (val_1.num == idx) {
                 __sum += val_1.value;
            }

            if (val_2.num == idx) {
                 __sum += val_2.value;
            }

            if (val_3.num == idx) {
                 __sum += val_3.value;
            }

            if (val_4.num == idx) {
                 __sum += val_4.value;
            }

            if (val_5.num == idx) {
                 __sum += val_5.value;
            }

            if (val_6.num == idx) {
                 __sum += val_6.value;
            }

            if (val_7.num == idx) {
                 __sum += val_7.value;
            }

            if (val_8.num == idx) {
                 __sum += val_8.value;
            }

            if (val_9.num == idx) {
                 __sum += val_9.value;
            }
            
            $(`#sum_${idx}`).html(__sum);    

            sum_total += __sum;

            //console.log(__sum);        
        }        

        $(`#sum_total`).html(sum_total);    
        
        //console.log(sum_total);        

        return sum_total
    }

    /*
    function sum_eval_item() {        

        //var totalArr = [];

        var sum_total = 0;

        for (idx in EvalItemGradeTbl_old){

            var __sum = 0;

            var val_1 = get_eval_item(1);
            var val_2 = get_eval_item(2);
            var val_3 = get_eval_item(3);
            var val_4 = get_eval_item(4);
            var val_5 = get_eval_item(5);
            var val_6 = get_eval_item(6);

            var val_7 = get_eval_item(7);
            var val_8 = get_eval_item(8);
            var val_9 = get_eval_item(9);

            if (val_1.num == idx) {
                __sum += val_1.value;
            }

            if (val_2.num == idx) {
                __sum += val_2.value;
            }

            if (val_3.num == idx) {
                __sum += val_3.value;
            }

            if (val_4.num == idx) {
                __sum += val_4.value;
            }

            if (val_5.num == idx) {
                __sum += val_5.value;
            }

            if (val_6.num == idx) {
                __sum += val_6.value;
            }

            if (val_7.num == idx) {
                __sum += val_7.value;
            }

            if (val_8.num == idx) {
                __sum += val_8.value;
            }

            if (val_9.num == idx) {
                __sum += val_9.value;
            }

            $(`#sum_${idx}`).html(__sum);    

            sum_total += __sum;
            
            //totalArr.push({idx:__sum}) 

            // if (value_2 != undefined && num_2 == idx) {
            //     __sum += parseInt(value_2);
            // }

            // if (value_3 != undefined && num_3 == idx) {
            //     __sum += parseInt(value_3);
            // }

            // if (value_4 != undefined && num_4 == idx) {
            //     __sum += parseInt(value_4);
            // }

            // if (value_5 != undefined && num_5 == idx) {
            //     __sum += parseInt(value_5);
            // }

            // if (value_6 != undefined && num_6 == idx) {
            //     __sum += parseInt(value_6);
            // }
            
            // var value_1 = $('input[name="eval_item1"]:checked').val();
            // var num_1 = $('input[name="eval_item1"]:checked').data("num");

            // var value_2 = $('input[name="eval_item2"]:checked').val();    
            // var num_2 = $('input[name="eval_item2"]:checked').data("num");

            // var value_3 = $('input[name="eval_item3"]:checked').val();
            // var num_3 = $('input[name="eval_item3"]:checked').data("num");

            // var value_4 = $('input[name="eval_item4"]:checked').val();   
            // var num_4 = $('input[name="eval_item4"]:checked').data("num");

            // var value_5 = $('input[name="eval_item5"]:checked').val();     
            // var num_5 = $('input[name="eval_item5"]:checked').data("num");

            // var value_6 = $('input[name="eval_item6"]:checked').val();
            // var num_6 = $('input[name="eval_item6"]:checked').data("num");

            // if (value_1 != undefined && num_1 == idx) {
            //     __sum += parseInt(value_1);
            // }

            // if (value_2 != undefined && num_2 == idx) {
            //     __sum += parseInt(value_2);
            // }

            // if (value_3 != undefined && num_3 == idx) {
            //     __sum += parseInt(value_3);
            // }

            // if (value_4 != undefined && num_4 == idx) {
            //     __sum += parseInt(value_4);
            // }

            // if (value_5 != undefined && num_5 == idx) {
            //     __sum += parseInt(value_5);
            // }

            // if (value_6 != undefined && num_6 == idx) {
            //     __sum += parseInt(value_6);
            // }
            
            // //console.log(`num:${idx}, total:${__sum}`);
            
            // $(`#sum_${idx}`).html(__sum);    

            // sumTotal += __sum;
            
            // totalArr.push({idx:__sum})
        }        

        $(`#sum_total`).html(sum_total);    

        //console.log(totalArr);
        console.log(sum_total);        
        //console.log(Score);        

        return sum_total
    }
    */

</script>

{{end}} 